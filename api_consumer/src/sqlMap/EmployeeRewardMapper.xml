<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.api.mapper.EmployeeRewardMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.api.entity.EmployeeReward" >
    <id column="reward_id" property="rewardId" jdbcType="INTEGER" />
    <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="is_reward" property="isReward" jdbcType="CHAR" />
    <result column="number" property="number" jdbcType="DOUBLE" />
    <result column="modifyer" property="modifyer" jdbcType="INTEGER" />
    <result column="modifytime" property="modifytime" jdbcType="CHAR" />
    <result column="reasons" property="reasons" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    reward_id, employee_id, type, is_reward, number, modifyer, modifytime, reasons
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee_reward
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee_reward
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zefun.api.entity.EmployeeReward" >
    insert into employee_reward (reward_id, employee_id, type, 
      is_reward, number, modifyer, 
      modifytime, reasons)
    values (#{rewardId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, 
      #{isReward,jdbcType=CHAR}, #{number,jdbcType=DOUBLE}, #{modifyer,jdbcType=INTEGER}, 
      #{modifytime,jdbcType=CHAR}, #{reasons,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zefun.api.entity.EmployeeReward" >
    insert into employee_reward
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rewardId != null" >
        reward_id,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="isReward != null" >
        is_reward,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="modifyer != null" >
        modifyer,
      </if>
      <if test="modifytime != null" >
        modifytime,
      </if>
      <if test="reasons != null" >
        reasons,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rewardId != null" >
        #{rewardId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="isReward != null" >
        #{isReward,jdbcType=CHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=DOUBLE},
      </if>
      <if test="modifyer != null" >
        #{modifyer,jdbcType=INTEGER},
      </if>
      <if test="modifytime != null" >
        #{modifytime,jdbcType=CHAR},
      </if>
      <if test="reasons != null" >
        #{reasons,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zefun.api.entity.EmployeeReward" >
    update employee_reward
    <set >
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="isReward != null" >
        is_reward = #{isReward,jdbcType=CHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=DOUBLE},
      </if>
      <if test="modifyer != null" >
        modifyer = #{modifyer,jdbcType=INTEGER},
      </if>
      <if test="modifytime != null" >
        modifytime = #{modifytime,jdbcType=CHAR},
      </if>
      <if test="reasons != null" >
        reasons = #{reasons,jdbcType=VARCHAR},
      </if>
    </set>
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zefun.api.entity.EmployeeReward" >
    update employee_reward
    set employee_id = #{employeeId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      is_reward = #{isReward,jdbcType=CHAR},
      number = #{number,jdbcType=DOUBLE},
      modifyer = #{modifyer,jdbcType=INTEGER},
      modifytime = #{modifytime,jdbcType=CHAR},
      reasons = #{reasons,jdbcType=VARCHAR}
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </update>
  
  <!-- 根据员工id, 时间, 类型查询员工奖惩记录 -->
  <select id="selectRewardByEmployeeIdAndTimeAndType" resultMap="BaseResultMap" parameterType="java.util.Map">
  	select 
  		<include refid="Base_Column_List" />
    from employee_reward 
    where employee_id = ${employeeId} and type = ${type} and modifytime like "${time}%" limit 1
  </select>
  
</mapper>