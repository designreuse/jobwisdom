<?xml version="1.0" encoding="UTF-8"?>
<beans     xmlns="http://www.springframework.org/schema/beans"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:p="http://www.springframework.org/schema/p"
           xmlns:tx="http://www.springframework.org/schema/tx"
           xmlns:context="http://www.springframework.org/schema/context"
           xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">
       <property name="triggers">
           <list>
              <ref bean="wechatTokenExpireTrigger"/>
              <ref bean="wechatMemberCountExpireTrigger"/>
              <ref bean="servicePlansJobTrigger"/>
           </list>
       </property>
       <property name="autoStartup" value="true"/>
	</bean>

	<!-- 微信api口令刷新定时任务 -->
	<bean id="wechatTokenExpireTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
       <property name="jobDetail" ref="wechatTokenDetail"/>
       <property name="cronExpression" value="0 0/30 * * * ?"/><!-- 每30分执行一次, 整点执行   -->
	</bean>

	<bean id="wechatTokenDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="wechatTokenJob"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
	</bean>

	<bean id="wechatTokenJob" class="com.zefun.wechat.job.WechatTokenJob" lazy-init="false"/>
	
	
	<!--每个月初将会员发送图文次数更改为4-->
	<bean id="wechatMemberCountExpireTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
       <property name="jobDetail" ref="wechatMemberCountDetail"/>
       <property name="cronExpression" value="0 59 23 L * ?"/><!-- 	每个月最后一天23点59分执行   -->
	</bean>

	<bean id="wechatMemberCountDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="wechatMemberCountJob"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
	</bean>
	
	<bean id="wechatMemberCountJob" class="com.zefun.wechat.job.WechatMemberCountJob" lazy-init="false"/>
	
	
	<!--对门店会员的服务计划推送功能-->
	<bean id="servicePlansJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
       <property name="jobDetail" ref="servicePlansJobDetail"/>
       <property name="cronExpression" value="0 0/30 * * * ?"/> <!-- 每30分执行一次, 整点执行 -->  
	</bean>
	
	<!--对门店会员的服务计划推送功能-->
	<!-- <bean id="servicePlansJobTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
	   <property name="jobDetail" ref="servicePlansJobDetail" />
	   <property name="startDelay" value="0" />
	   <property name="repeatInterval" value="1000" />
	</bean> -->

	<bean id="servicePlansJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="servicePlansJobJob"/>
        <property name="targetMethod" value="execute"/>
        <property name="concurrent" value="false"/>
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
	</bean>
	
	<bean id="servicePlansJobJob" class="com.zefun.wechat.job.ServicePlansJob" lazy-init="false"/>
	
</beans>