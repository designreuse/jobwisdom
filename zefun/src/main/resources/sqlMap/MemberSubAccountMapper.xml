<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.MemberSubAccountMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.web.entity.MemberSubAccount" >
    <id column="sub_account_id" property="subAccountId" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="level_id" property="levelId" jdbcType="INTEGER" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="total_present_amount" property="totalPresentAmount" jdbcType="DECIMAL" />
    <result column="balance_amount" property="balanceAmount" jdbcType="DECIMAL" />
    <result column="use_amount" property="useAmount" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="last_operator_id" property="lastOperatorId" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="SubAccountMap" type="com.zefun.web.dto.MemberSubAccountDto" >
    <id column="sub_account_id" property="subAccountId" jdbcType="INTEGER" />
    <result column="level_id" property="levelId" jdbcType="INTEGER" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="total_present_amount" property="totalPresentAmount" jdbcType="DECIMAL" />
    <result column="balance_amount" property="balanceAmount" jdbcType="DECIMAL" />
    <result column="use_amount" property="useAmount" jdbcType="DECIMAL" />
    <result column="level_name" property="levelName" jdbcType="VARCHAR" />
    <result column="project_discount" property="projectDiscount" jdbcType="INTEGER" />
    <result column="goods_discount" property="goodsDiscount" jdbcType="INTEGER" />
    <result column="cash_discount_type" property="cashDiscountType" jdbcType="INTEGER" />
    <result column="integral_unit" property="integralUnit" jdbcType="INTEGER" />
    <result column="integral_number" property="integralNumber" jdbcType="INTEGER" />
    <result column="performance_discount_percent" property="performanceDiscountPercent" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    sub_account_id, account_id, level_id, total_amount, total_present_amount, balance_amount, 
    use_amount, create_time, update_time, last_operator_id
  </sql>
  
  <select id="selectNoMoneyAccountId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
  	select sub_account_id from member_sub_account where account_id = #{accountId} and (total_amount + balance_amount) &lt;= 0 
  </select>
  
  <select id="selectSubAccountListByAccountId" resultMap="SubAccountMap" parameterType="java.lang.Integer">
  	select 
		msa.sub_account_id, msa.level_id, msa.total_amount, msa.total_present_amount, msa.balance_amount, msa.use_amount,
		ml.level_name, ml.project_discount, ml.goods_discount, ml.cash_discount_type, ml.integral_unit, ml.integral_number, 
		ml.performance_discount_percent, ml.level_notice
	from member_sub_account msa
	left join member_level ml on msa.level_id = ml.level_id
	where msa.account_id = #{accountId}
  </select>
  
  <select id="selectSubAccountBySubAccountId" resultMap="SubAccountMap" parameterType="java.lang.Integer">
  	select 
		msa.sub_account_id, msa.level_id, msa.total_amount, msa.total_present_amount, msa.balance_amount, msa.use_amount,
		ml.level_name, ml.project_discount, ml.goods_discount, ml.cash_discount_type, ml.integral_unit, ml.integral_number,
		ml.performance_discount_percent, ml.level_notice
	from member_sub_account msa
	left join member_level ml on msa.level_id = ml.level_id
	where msa.sub_account_id = #{subAccountId}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from member_sub_account
    where sub_account_id = #{subAccountId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from member_sub_account
    where sub_account_id = #{subAccountId,jdbcType=INTEGER}
  </delete>
  
  <update id="updateBalanceAmountForConsume" parameterType="java.util.Map">
  	update member_sub_account 
  		set total_amount = total_amount - #{useAmount}, 
  			balance_amount = balance_amount - #{useAmount}, 
  			use_amount = use_amount + #{useAmount},
  			update_time = #{time}
  		where sub_account_id = #{subAccountId} and balance_amount >= #{useAmount}
  </update>
  
  <insert id="insert" parameterType="com.zefun.web.entity.MemberSubAccount" useGeneratedKeys="true" keyProperty="subAccountId">
    insert into member_sub_account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="subAccountId != null" >
        sub_account_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="levelId != null" >
        level_id,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="totalPresentAmount != null" >
        total_present_amount,
      </if>
      <if test="balanceAmount != null" >
        balance_amount,
      </if>
      <if test="useAmount != null" >
        use_amount,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="subAccountId != null" >
        #{subAccountId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="levelId != null" >
        #{levelId,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalPresentAmount != null" >
        #{totalPresentAmount,jdbcType=DECIMAL},
      </if>
      <if test="balanceAmount != null" >
        #{balanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="useAmount != null" >
        #{useAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=CHAR},
      </if>
      <if test="lastOperatorId != null" >
        #{lastOperatorId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.zefun.web.entity.MemberSubAccount" >
    update member_sub_account
    <set >
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="levelId != null" >
        level_id = #{levelId,jdbcType=INTEGER},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalPresentAmount != null" >
        total_present_amount = #{totalPresentAmount,jdbcType=DECIMAL},
      </if>
      <if test="balanceAmount != null" >
        balance_amount = #{balanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="useAmount != null" >
        use_amount = #{useAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=CHAR},
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id = #{lastOperatorId,jdbcType=INTEGER},
      </if>
    </set>
    where sub_account_id = #{subAccountId,jdbcType=INTEGER}
  </update>
  
  <update id="updateCharge" parameterType="java.util.Map" >
    update member_sub_account set
    total_amount = total_amount + #{chargeAmount,jdbcType=INTEGER},
    balance_amount = balance_amount + #{chargeAmount,jdbcType=INTEGER},
    total_present_amount = total_present_amount + #{rewardAmount}
    where sub_account_id = #{subAccountId,jdbcType=INTEGER}
  </update>
  
  <update id="updateAdd" parameterType="java.util.Map" >
    update member_sub_account
    set balance_amount = balance_amount + #{chargeAmount,jdbcType=INTEGER},
    total_amount = total_amount + #{chargeAmount,jdbcType=INTEGER}
    where sub_account_id = #{subAccountId,jdbcType=INTEGER}
  </update>

  <update id="updateDecrease" parameterType="java.util.Map" >
    update member_sub_account
    set balance_amount = balance_amount - #{chargeAmount,jdbcType=INTEGER}
    where sub_account_id = #{subAccountId,jdbcType=INTEGER}
  </update>
  
</mapper>