<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.ShiftMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.web.dto.ShiftDto" >
    <id column="shif_id" property="shifId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="shif_name" property="shifName" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="CHAR" />
    <result column="end_time" property="endTime" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="last_operator_id" property="lastOperatorId" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap type="com.zefun.web.dto.ExcelOfEmployeeShiftInfoDto" id="ExcelOfEmployeeShiftInfoMap">
  	<result column="employee_code" property="employeeCode" jdbcType="VARCHAR" />
  	<result column="name" property="name" jdbcType="VARCHAR" />
  	<result column="dept_name" property="deptName" jdbcType="VARCHAR" />
  	<result column="position_name" property="positionName" jdbcType="VARCHAR" />
  	<result column="level_name" property="levelName" jdbcType="VARCHAR" />
  	<result column="shif_namea" property="shifNamea" jdbcType="VARCHAR" />
  	<result column="shif_nameb" property="shifNameb" jdbcType="VARCHAR" />
  	<result column="shif_namec" property="shifNamec" jdbcType="VARCHAR" />
  	<result column="shif_named" property="shifNamed" jdbcType="VARCHAR" />
  	<result column="shif_namee" property="shifNamee" jdbcType="VARCHAR" />
  	<result column="shif_namef" property="shifNamef" jdbcType="VARCHAR" />
  	<result column="shif_nameg" property="shifNameg" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="ShiftInfoMap" type="com.zefun.web.entity.ShiftInfo" >
    <id column="shif_id" property="shifId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="shif_name" property="shifName" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="CHAR" />
    <result column="end_time" property="endTime" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="last_operator_id" property="lastOperatorId" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="EntityBaseResultMap" type="com.zefun.web.entity.ShiftInfo" >
    <id column="shif_id" property="shifId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="shif_name" property="shifName" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="CHAR" />
    <result column="end_time" property="endTime" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="last_operator_id" property="lastOperatorId" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
  	shif_id, store_id, dept_id, shif_name, start_time, end_time, create_time, update_time, 
    last_operator_id
  </sql>
  
  <!-- 根据员工查询班次信息, by 张进军 -->
  <select id="selectShiftByEmployeeId" resultType="java.util.Map" parameterType="java.lang.Integer">
    select 
	    (select CONCAT(start_time, ',', end_time) from shift_info where shif_id = es.shif_ida ) '2',
	    (select CONCAT(start_time, ',', end_time) from shift_info where shif_id = es.shif_idb ) '3',
	    (select CONCAT(start_time, ',', end_time) from shift_info where shif_id = es.shif_idc ) '4',
	    (select CONCAT(start_time, ',', end_time) from shift_info where shif_id = es.shif_idd ) '5',
	    (select CONCAT(start_time, ',', end_time) from shift_info where shif_id = es.shif_ide ) '6',
	    (select CONCAT(start_time, ',', end_time) from shift_info where shif_id = es.shif_idf ) '7',
	    (select CONCAT(start_time, ',', end_time) from shift_info where shif_id = es.shif_idg ) '1'
	from employee_shift es where es.employee_id = #{employeeId}
  </select>
  
  <update id="updateByPrimaryKey" parameterType="com.zefun.web.dto.ShiftDto" >
    update shift_info
    set store_id = #{storeId,jdbcType=INTEGER},
      shif_name = #{shifName,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=CHAR},
      end_time = #{endTime,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=CHAR},
      update_time = #{updateTime,jdbcType=CHAR},
      last_operator_id = #{lastOperatorId,jdbcType=INTEGER}
    where shif_id = #{shifId,jdbcType=INTEGER}
  </update>
  <select id="getEmployeeShift" parameterType="com.zefun.web.entity.Page" resultType="com.zefun.web.dto.ShiftDto">
	  select i.employee_id employeeId,i.employee_code employeeCode,i.name,
	(select a.shif_name from shift_info a where a.shif_id=t.shif_ida) shifIda,
	(select b.shif_name from shift_info b where b.shif_id=t.shif_idb) shifIdb,
	(select c.shif_name from shift_info c where c.shif_id=t.shif_idc) shifIdc,
	(select d.shif_name from shift_info d where d.shif_id=t.shif_idd) shifIdd,
	(select e.shif_name from shift_info e where e.shif_id=t.shif_ide) shifIde,
	(select f.shif_name from shift_info f where f.shif_id=t.shif_idf) shifIdf,
	(select g.shif_name from shift_info g where g.shif_id=t.shif_idg) shifIdg
	from employee_shift t
	left join employee_info i on i.employee_id=t.employee_id
    left join position_info p on p.position_id=i.position_id
    left join dept_info d on d.dept_id=p.dept_id
    where d.dept_id=#{params.deptId} and i.is_deleted=0
    <if test="params.search !=null and params.search !=''">
    and (i.employee_code like concat('%',#{params.search},'%') or i.name like concat('%',#{params.search},'%'))
    </if>
  </select>
  <select id="getShiftInfo" parameterType="java.lang.Integer" resultType="com.zefun.web.entity.ShiftInfo">
	select shif_id shifId,shif_name shifName,start_time startTime,end_time endTime from shift_info where dept_id=#{deptId}
  </select>
  <insert id="employeeShift" parameterType="java.util.Map">
  insert into employee_shift (data_id, employee_id, shif_ida, 
      shif_idb, shif_idc, shif_idd, 
      shif_ide, shif_idf, shif_idg, 
      create_time, update_time, last_operator_id
      )
    values (#{dataId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{shifIda,jdbcType=INTEGER}, 
      #{shifIdb,jdbcType=INTEGER}, #{shifIdc,jdbcType=INTEGER}, #{shifIdd,jdbcType=INTEGER}, 
      #{shifIde,jdbcType=INTEGER}, #{shifIdf,jdbcType=INTEGER}, #{shifIdg,jdbcType=INTEGER}, 
      #{createTime,jdbcType=CHAR}, #{updateTime,jdbcType=CHAR}, #{lastOperatorId,jdbcType=INTEGER}
      )
  </insert>
  <delete id="deleteShift" parameterType="java.util.Map">
  delete from employee_shift where employee_id=#{employeeId}
  </delete>
  <select id="queryEmployeeShift" parameterType="java.util.Map" resultType="com.zefun.web.dto.ShiftDto">
  select t.shif_ida shifIda,t.shif_idb shifIdb,t.shif_idc shifIdc,t.shif_idd shifIdd ,t.shif_ide shifIde,t.shif_idf shifIdf,t.shif_idg shifIdg,
	(select a.shif_name from shift_info a where a.shif_id=t.shif_ida) shifNamea,
	(select b.shif_name from shift_info b where b.shif_id=t.shif_idb) shifNameb,
	(select c.shif_name from shift_info c where c.shif_id=t.shif_idc) shifNamec,
	(select d.shif_name from shift_info d where d.shif_id=t.shif_idd) shifNamed,
	(select e.shif_name from shift_info e where e.shif_id=t.shif_ide) shifNamee,
	(select f.shif_name from shift_info f where f.shif_id=t.shif_idf) shifNamef,
	(select g.shif_name from shift_info g where g.shif_id=t.shif_idg) shifNameg
	from employee_shift t
  where t.employee_id=#{employeeId}
  </select>
  <select id="countIsshift"  parameterType="java.util.Map" resultType="java.lang.Integer">
  select count(0) from employee_shift where employee_id=#{employeeId}
  </select>
  <!-- 根据员工数组判断其中是否有员工已经排班 by DavidLiang -->
  <select id="countIsshiftByArray" resultType="java.lang.Integer">
  	select count(0) from employee_shift where employee_id in 
  	<foreach collection="array" item="employeeIdArr" open="(" separator="," close=")">
  		${employeeIdArr}
  	</foreach>
  </select>
  <!-- 批量新增员工排班 by DavidLiang -->
  <insert id="insertShiftBatch" useGeneratedKeys="true" parameterType="java.util.List">
	insert into employee_shift 
		(employee_id, shif_ida, 
		shif_idb, shif_idc, shif_idd, 
		shif_ide, shif_idf, shif_idg, 
		create_time, last_operator_id
		)
		values
		<foreach collection="list" item="item" separator="," >
			(#{list.employeeId,jdbcType=INTEGER}, #{list.shifIda,jdbcType=INTEGER}, 
			#{list.shifIdb,jdbcType=INTEGER}, #{list.shifIdc,jdbcType=INTEGER}, #{list.shifIdd,jdbcType=INTEGER}, 
			#{list.shifIde,jdbcType=INTEGER}, #{list.shifIdf,jdbcType=INTEGER}, #{list.shifIdg,jdbcType=INTEGER}, 
			#{list.createTime,jdbcType=CHAR}, #{list.userId,jdbcType=INTEGER}
			)
		</foreach>
  </insert>
  <update id="updateShift" parameterType="com.zefun.web.entity.ShiftInfo" >
  update shift_info set start_time=#{startTime} ,end_time=#{endTime}  where shif_name=#{shifName} and dept_id=#{deptId}
  </update>
  <insert id="addShift" parameterType="java.util.Map" >
  insert into shift_info (shif_id, store_id, dept_id, 
      shif_name, start_time, end_time, 
      create_time, update_time, last_operator_id
      )
    values (#{shifId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, 
      #{shifName,jdbcType=VARCHAR}, #{startTime,jdbcType=CHAR}, #{endTime,jdbcType=CHAR}, 
      #{createTime,jdbcType=CHAR}, #{updateTime,jdbcType=CHAR}, #{lastOperatorId,jdbcType=INTEGER}
      )
  </insert>
  <select id="queryshiftinfo" parameterType="java.util.Map" resultType="com.zefun.web.entity.ShiftInfo">
  SELECT shif_id shifId from shift_info
  where dept_id=#{deptId} and shif_name=#{shifName}
  </select>
  <insert id="insertInfo" parameterType="com.zefun.web.dto.ShiftDto">
   insert into employee_shift ( employee_id, shif_ida, 
      shif_idb, shif_idc, shif_idd, 
      shif_ide, shif_idf, shif_idg
      )
    values (#{employeeId,jdbcType=INTEGER}, #{shifIda,jdbcType=INTEGER}, 
      #{shifIdb,jdbcType=INTEGER}, #{shifIdc,jdbcType=INTEGER}, #{shifIdd,jdbcType=INTEGER}, 
      #{shifIde,jdbcType=INTEGER}, #{shifIdf,jdbcType=INTEGER}, #{shifIdg,jdbcType=INTEGER}
      )
  </insert>
  <resultMap type="com.zefun.web.dto.ShiftDto" id="getEmployeeInfo">
  		
        <association property="shiftDto" column="{employeeId=employeeId}" select="yuanGongShift" />
  </resultMap>
 <select id="queryEmployee" parameterType="com.zefun.web.entity.Page" resultMap="getEmployeeInfo">
 select employee_id employeeId,name,employee_code employeeCode from employee_info where store_id=#{params.storeId} and is_deleted=0
 <if test="params.deptId != null and params.deptId != ''">
  and dept_id=#{params.deptId} 
   </if>
 </select>
 <select id="yuanGongShift" resultType="com.zefun.web.dto.ShiftDto" parameterType="java.util.Map">
 select t.shif_ida shifIda,t.shif_idb shifIdb,t.shif_idc shifIdc,t.shif_idd shifIdd ,t.shif_ide shifIde,t.shif_idf shifIdf,t.shif_idg shifIdg,
	(select a.shif_name from shift_info a where a.shif_id=t.shif_ida) shifNamea,
	(select b.shif_name from shift_info b where b.shif_id=t.shif_idb) shifNameb,
	(select c.shif_name from shift_info c where c.shif_id=t.shif_idc) shifNamec,
	(select d.shif_name from shift_info d where d.shif_id=t.shif_idd) shifNamed,
	(select e.shif_name from shift_info e where e.shif_id=t.shif_ide) shifNamee,
	(select f.shif_name from shift_info f where f.shif_id=t.shif_idf) shifNamef,
	(select g.shif_name from shift_info g where g.shif_id=t.shif_idg) shifNameg
	from employee_shift t
  where t.employee_id=#{employeeId}
 </select>
 
 <insert id="insertShiftinfo" parameterType="com.zefun.web.entity.ShiftInfo" >
  insert into shift_info (shif_id, store_id, dept_id, 
      shif_name, start_time, end_time, 
      create_time, update_time, last_operator_id
      )
    values (#{shifId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{deptId,jdbcType=INTEGER}, 
      #{shifName,jdbcType=VARCHAR}, #{startTime,jdbcType=CHAR}, #{endTime,jdbcType=CHAR}, 
      #{createTime,jdbcType=CHAR}, #{updateTime,jdbcType=CHAR}, #{lastOperatorId,jdbcType=INTEGER}
      )
  </insert>
  
  <!-- 根据店铺id得到员工班次excel模板信息 -->
  <select id="selectExcelOfEmployeeShiftInfo" resultMap="ExcelOfEmployeeShiftInfoMap" parameterType="java.lang.Integer">
  	select ei.employee_code, ei.name, di.dept_name, pi.position_name, el.level_name, 
	  sia.shif_name as shif_namea, sib.shif_name as shif_nameb, sic.shif_name as shif_namec, sid.shif_name as shif_named, 
	  sie.shif_name as shif_namee, sif.shif_name as shif_namef, sif.shif_name as shif_nameg 
	from employee_info ei 
	left join dept_info di on ei.dept_id = di.dept_id 
	left join position_info pi on ei.position_id = pi.position_id  
	left join employee_level el on ei.level_id = el.level_id 
	left join employee_shift es on ei.employee_id = es.employee_id  
	left join shift_info sia on sia.shif_id = es.shif_ida 
	left join shift_info sib on sib.shif_id = es.shif_idb 
	left join shift_info sic on sic.shif_id = es.shif_idc 
	left join shift_info sid on sid.shif_id = es.shif_idd 
	left join shift_info sie on sie.shif_id = es.shif_ide 
	left join shift_info sif on sif.shif_id = es.shif_idf 
	left join shift_info sig on sig.shif_id = es.shif_idg 
	where ei.store_id = #{storeId} and ei.dept_id != 0 and ei.is_deleted = 0
  </select>
  
  <!-- 根据店铺id和部门id查询班次总数 -->
  <select id="selectCountShiftByStoreAndDept" resultType="java.lang.Integer">
  	select count(*) from shift_info where store_id = #{storeId} and dept_id = #{detpId}
  </select>
  
  <!-- 根据主键查询班次 -->
  <select id="selectByPrimaryKey" resultMap="ShiftInfoMap" parameterType="java.lang.Integer">
  	select <include refid="Base_Column_List" /> 
  	from shift_info 
  	where shif_id = ${shiftId}
  </select>
  
  <!-- 根据星期几查询员工班次 -->
  <select id="selectShiftByWeekDay" resultMap="EntityBaseResultMap">
  	select <include refid="Base_Column_List" /> 
  	from shift_info 
  	where shif_id = 
  	(
  		select ${shiftId} 
  		from employee_shift 
  		where employee_id = ${employeeId}
  	)
  </select>
  
  
</mapper>