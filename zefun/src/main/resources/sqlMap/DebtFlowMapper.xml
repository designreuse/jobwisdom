<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.DebtFlowMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.web.entity.DebtFlow" >
    <id column="debt_id" property="debtId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="flow_type" property="flowType" jdbcType="INTEGER" />
    <result column="flow_desc" property="flowDesc" jdbcType="VARCHAR" />
    <result column="account_id" property="accountId" jdbcType="INTEGER" />
    <result column="in_amount" property="inAmount" jdbcType="DECIMAL" />
    <result column="flow_debt_time" property="flowDebtTime" jdbcType="CHAR" />
    <result column="last_operator_id" property="lastOperatorId" jdbcType="INTEGER" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    debt_id, order_id, flow_type, flow_desc, account_id, in_amount, flow_debt_time, last_operator_id, 
    is_deleted
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from debt_flow
    where debt_id = #{debtId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from debt_flow
    where debt_id = #{debtId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zefun.web.entity.DebtFlow" >
    insert into debt_flow (debt_id, order_id, flow_type, 
      flow_desc, account_id, in_amount, 
      flow_debt_time, last_operator_id, is_deleted
      )
    values (#{debtId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{flowType,jdbcType=INTEGER}, 
      #{flowDesc,jdbcType=VARCHAR}, #{accountId,jdbcType=INTEGER}, #{inAmount,jdbcType=DECIMAL}, 
      #{flowDebtTime,jdbcType=CHAR}, #{lastOperatorId,jdbcType=INTEGER}, #{isDeleted,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zefun.web.entity.DebtFlow" >
    insert into debt_flow
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="debtId != null" >
        debt_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="flowType != null" >
        flow_type,
      </if>
      <if test="flowDesc != null" >
        flow_desc,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="inAmount != null" >
        in_amount,
      </if>
      <if test="flowDebtTime != null" >
        flow_debt_time,
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="debtId != null" >
        #{debtId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="flowType != null" >
        #{flowType,jdbcType=INTEGER},
      </if>
      <if test="flowDesc != null" >
        #{flowDesc,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=INTEGER},
      </if>
      <if test="inAmount != null" >
        #{inAmount,jdbcType=DECIMAL},
      </if>
      <if test="flowDebtTime != null" >
        #{flowDebtTime,jdbcType=CHAR},
      </if>
      <if test="lastOperatorId != null" >
        #{lastOperatorId,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zefun.web.entity.DebtFlow" >
    update debt_flow
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="flowType != null" >
        flow_type = #{flowType,jdbcType=INTEGER},
      </if>
      <if test="flowDesc != null" >
        flow_desc = #{flowDesc,jdbcType=VARCHAR},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
      <if test="inAmount != null" >
        in_amount = #{inAmount,jdbcType=DECIMAL},
      </if>
      <if test="flowDebtTime != null" >
        flow_debt_time = #{flowDebtTime,jdbcType=CHAR},
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id = #{lastOperatorId,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where debt_id = #{debtId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zefun.web.entity.DebtFlow" >
    update debt_flow
    set order_id = #{orderId,jdbcType=INTEGER},
      flow_type = #{flowType,jdbcType=INTEGER},
      flow_desc = #{flowDesc,jdbcType=VARCHAR},
      account_id = #{accountId,jdbcType=INTEGER},
      in_amount = #{inAmount,jdbcType=DECIMAL},
      flow_debt_time = #{flowDebtTime,jdbcType=CHAR},
      last_operator_id = #{lastOperatorId,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where debt_id = #{debtId,jdbcType=INTEGER}
  </update>
  
  <select id="selectFlowListByAccountIdPage" resultMap="BaseResultMap" parameterType="com.zefun.web.entity.Page" >
    select 
    <include refid="Base_Column_List" />
    from debt_flow
    where account_id = #{params.accountId} and is_deleted = 0 order by flow_debt_time desc
  </select>
  
  <select id="selectByOrderId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from debt_flow
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
</mapper>