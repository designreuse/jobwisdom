<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.EmployeeLevelMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.web.entity.EmployeeLevel" >
    <id column="level_id" property="levelId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="position_id" property="positionId" jdbcType="INTEGER" />
    <result column="level_name" property="levelName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    
    <result column="reference_first" property="referenceFirst" jdbcType="INTEGER" />
    <result column="reference_two" property="referenceTwo" jdbcType="INTEGER" />
    
    <result column="last_operator_id" property="lastOperatorId" jdbcType="INTEGER" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="EmployeelevelDtoMap" type="com.zefun.web.dto.EmployeeLevelDto" >
    <id column="level_id" property="levelId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="position_id" property="positionId" jdbcType="INTEGER" />
    <result column="level_name" property="levelName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="last_operator_id" property="lastOperatorId" jdbcType="INTEGER" />
    <association property="employeeInfoList"  column="{level_id=level_id,store_id=store_id}" select="com.zefun.web.mapper.EmployeeInfoMapper.selectByLevelId"></association>
  </resultMap>

  <select id="selectAllByStoreId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select * from employee_level where store_id = #{storeId,jdbcType=INTEGER} and is_deleted = 0
  </select>

  <select id="queryEmployeelevelinfo" parameterType="com.zefun.web.entity.Page" resultType="com.zefun.web.dto.EmployeeLevelDto">
	 select p.position_name positionName,l.position_id positionId,l.level_id levelId,
	 l.level_name levelName from employee_level l
	left join position_info p on p.position_id=l.position_id where 1=1
  </select>
  <select id="leveldetail" parameterType="java.lang.Integer" resultType="com.zefun.web.dto.EmployeeLevelDto">
    select p.position_name positionName,l.position_id positionId,l.level_id levelId,l.position_id positionId,
	l.level_name levelName from employee_level l
	left join position_info p on p.position_id=l.position_id where l.level_id=#{levelId}
  </select>
  
  <insert id="insert" parameterType="com.zefun.web.entity.EmployeeLevel" useGeneratedKeys="true" keyProperty="levelId">
     insert into employee_level (level_id, store_id, position_id, 
      level_name, create_time, update_time, reference_first, reference_two, 
      last_operator_id
      )
    values (#{levelId,jdbcType=INTEGER}, #{storeId,jdbcType=INTEGER}, #{positionId,jdbcType=INTEGER}, 
      #{levelName,jdbcType=VARCHAR}, #{createTime,jdbcType=CHAR}, 
      #{updateTime,jdbcType=CHAR}, #{referenceFirst,jdbcType=INTEGER}, #{referenceTwo,jdbcType=INTEGER}, 
      #{lastOperatorId,jdbcType=INTEGER}
      )
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.zefun.web.entity.EmployeeLevel" >
     update employee_level
    <set >
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null" >
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
      <if test="levelName != null" >
        level_name = #{levelName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=CHAR},
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id = #{lastOperatorId,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="referenceFirst != null" >
        reference_first = #{referenceFirst,jdbcType=INTEGER},
      </if>
      <if test="referenceTwo != null" >
        reference_two = #{referenceTwo,jdbcType=INTEGER},
      </if>
    </set>
    where level_id = #{levelId,jdbcType=INTEGER}
  </update>
  <!-- 删除职位信息 -->
  <update id="deleteEmployeelevel" parameterType="com.zefun.web.entity.EmployeeLevel">
  update employee_level set is_deleted=1 where level_id=#{levelId}
  </update>
  <!-- 判断职位名称是否存在 -->
  <select id="islevelName" parameterType="com.zefun.web.entity.EmployeeLevel" resultType="com.zefun.web.entity.EmployeeLevel">
  select level_id levelId from employee_level where store_id = #{storeId} and level_name = #{levelName} and is_deleted=0 and position_id=#{positionId}
  </select>
  <!-- 判断职位是否有被人员引用 -->
  <select id="islevelIdcount" parameterType="com.zefun.web.entity.EmployeeLevel" resultType="java.lang.Integer">
  	select count(0)  from employee_info where store_id = #{storeId} and level_id = #{levelId} and is_deleted=0
  </select>
  <!-- 下拉框公共获取职位信息 -->
  <select id="queryEmployeeLevel" parameterType="com.zefun.web.entity.EmployeeLevel" resultType="com.zefun.web.entity.EmployeeLevel">
	  select el.level_id levelId, el.level_name levelName, el.reference_first referenceFirst, el.reference_two referenceTwo, 
	  el.position_id positionId, pio.position_name positionName from employee_level el
	  left join position_info pio on pio.position_id = el.position_id
	  where el.store_id = #{storeId} and el.is_deleted = 0
	  <if test="positionId != null " >
	    and el.position_id = #{positionId}
   	  </if>
  </select>
  
  <select id="selectByKey" parameterType="com.zefun.web.entity.EmployeeLevel" resultMap="EmployeelevelDtoMap">
    select * from employee_level where store_id = #{storeId,jdbcType=INTEGER} and level_id = #{levelId,jdbcType=INTEGER} and is_deleted = 0
  </select>
  <!-- 获取职位底下员工 -->
 <select id="getlevelemployee" parameterType="java.util.Map" resultType="com.zefun.web.dto.EmployeeDto">
 SELECT t.employee_id employeeId,t.employee_code employeeCode,d.dept_name deptName,t.name,p.position_name positionName,
 l.level_name levelName,t.sex,t.phone,t.entry_date entryDate,t.employee_status employeeStatus,
 t.base_salaries baseSalaries,u.user_name userName
 from employee_info t 
	LEFT JOIN position_info p ON p.position_id=t.position_id
	LEFT JOIN user_account u ON u.user_id=t.employee_id
	LEFT JOIN employee_level l ON l.level_id=t.level_id 
	LEFT JOIN dept_info d ON d.dept_id=t.dept_id where t.is_deleted=0 and t.store_id=#{storeId} and t.dept_id>0
	and t.level_id=#{levelId}
 </select>
 
 <select id="selectByLevelIds" resultMap="BaseResultMap">
  	select level_id, store_id, store_id,level_name, create_time, update_time, last_operator_id
  	from employee_level where level_id in
  	<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
    	#{item}
    </foreach>
  </select>
 <select id="countlevel" parameterType="java.util.Map" resultType="com.zefun.web.entity.EmployeeLevel">
  select level_id levelId from employee_level where level_name=#{levelName} and position_id=#{positionId} and is_deleted=0
 </select>
 
 <!-- 根据店铺id查询所有等级/职位(状态没删除的) -->
 <select id="selectEmployeeLevelsByStoreId" resultType="java.lang.String" parameterType="java.lang.Integer">
 	select level_name from employee_level where is_deleted = 0 and store_id = #{storeId}
 </select>
 
 <select id="selectByPositionIds" parameterType="java.util.Map" resultType="com.zefun.web.dto.EmployeeLevelBaseDto">
 	select level_id as levelId, level_name as levelName from employee_level where position_id in (${positionIds}) and is_deleted = 0 
 </select>
 
</mapper>