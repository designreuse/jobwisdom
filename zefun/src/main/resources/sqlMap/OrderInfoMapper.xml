<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.OrderInfoMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.web.entity.OrderInfo" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="level_id" property="levelId" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="order_code" property="orderCode" jdbcType="CHAR" />
    <result column="hand_order_code" property="handOrderCode" jdbcType="CHAR" />
    <result column="receivable_amount" property="receivableAmount" jdbcType="DECIMAL" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="cash_amount" property="cashAmount" jdbcType="DECIMAL" />
    <result column="unionpay_amount" property="unionpayAmount" jdbcType="DECIMAL" />
    <result column="card_amount" property="cardAmount" jdbcType="DECIMAL" />
    <result column="gift_amount" property="giftAmount" jdbcType="DECIMAL" />
    <result column="wechat_amount" property="wechatAmount" jdbcType="DECIMAL" />
    <result column="alipay_amount" property="alipayAmount" jdbcType="DECIMAL" />
    <result column="group_amount" property="groupAmount" jdbcType="DECIMAL" />
    <result column="cash_card_type" property="cashCardType" jdbcType="INTEGER" />
    <result column="combo_amount" property="comboAmount" jdbcType="DECIMAL" />
    <result column="coupon_amount" property="couponAmount" jdbcType="DECIMAL" />
    <result column="appoint_off" property="appointOff" jdbcType="INTEGER" />
    <result column="free_amount" property="freeAmount" jdbcType="CHAR" />
    <result column="debt_amount" property="debtAmount" jdbcType="DECIMAL" />
    <result column="real_amount" property="realAmount" jdbcType="DECIMAL" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="is_order_option" property="isOrderOption" jdbcType="INTEGER" />
    <result column="option_employee_id" property="optionEmployeeId" jdbcType="INTEGER" />
    <result column="order_evaluate" property="orderEvaluate" jdbcType="VARCHAR" />
    <result column="appointment_id" property="appointmentId" jdbcType="INTEGER" />
    <result column="is_share" property="isShare" jdbcType="INTEGER" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="last_operator_id" property="lastOperatorId" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="OrderBaseResultMap" type="com.zefun.web.dto.OrderInfoBaseDto" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="order_code" property="orderCode" jdbcType="CHAR" />
    <result column="hand_order_code" property="handOrderCode" jdbcType="CHAR" />
    <result column="receivable_amount" property="receivableAmount" jdbcType="DECIMAL" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="cash_amount" property="cashAmount" jdbcType="DECIMAL" />
    <result column="unionpay_amount" property="unionpayAmount" jdbcType="DECIMAL" />
    <result column="gift_amount" property="giftAmount" jdbcType="DECIMAL" />
    <result column="wechat_amount" property="wechatAmount" jdbcType="DECIMAL" />
    <result column="alipay_amount" property="alipayAmount" jdbcType="DECIMAL" />
    <result column="group_amount" property="groupAmount" jdbcType="DECIMAL" />
    <result column="cash_card_type" property="cashCardType" jdbcType="INTEGER" />
    <result column="card_amount" property="cardAmount" jdbcType="DECIMAL" />
    <result column="combo_amount" property="comboAmount" jdbcType="DECIMAL" />
    <result column="coupon_amount" property="couponAmount" jdbcType="DECIMAL" />
    <result column="appoint_off" property="appointOff" jdbcType="INTEGER" />
    <result column="free_amount" property="freeAmount" jdbcType="CHAR" />
    <result column="debt_amount" property="debtAmount" jdbcType="DECIMAL" />
    <result column="real_amount" property="realAmount" jdbcType="DECIMAL" />
    <result column="appointment_id" property="appointmentId" jdbcType="INTEGER" />
    <result column="order_evaluate" property="orderEvaluate" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="is_share" property="isShare" jdbcType="INTEGER" />
    <association property="orderDetailList" column="order_id" select="com.zefun.web.mapper.OrderDetailMapper.selectDetailListByOrderId" />
  </resultMap>

  <resultMap id="MemberOrderResultMap" type="com.zefun.web.dto.MemberOrderDto" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="order_code" property="orderCode" jdbcType="CHAR" />
    <result column="receivable_amount" property="receivableAmount" jdbcType="DECIMAL" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="cash_amount" property="cashAmount" jdbcType="DECIMAL" />
    <result column="unionpay_amount" property="unionpayAmount" jdbcType="DECIMAL" />
    <result column="card_amount" property="cardAmount" jdbcType="DECIMAL" />
    <result column="combo_amount" property="comboAmount" jdbcType="DECIMAL" />
    <result column="coupon_amount" property="couponAmount" jdbcType="DECIMAL" />
    <result column="free_amount" property="freeAmount" jdbcType="CHAR" />
    <result column="debt_amount" property="debtAmount" jdbcType="DECIMAL" />
    <result column="real_amount" property="realAmount" jdbcType="DECIMAL" />
    <result column="appointment_id" property="appointmentId" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="is_share" property="isShare" jdbcType="INTEGER" />
    <association property="detailList" column="order_id" select="com.zefun.web.mapper.OrderDetailMapper.selectDetailListByOrderId" />
  </resultMap>

  <!-- 消费明细传输对象 -->
  <resultMap id="OrderPaymentMap" type="com.zefun.web.dto.OrderPaymentDto" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="order_code" property="orderCode" jdbcType="CHAR" />
    <result column="receivable_amount" property="receivableAmount" jdbcType="DECIMAL" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="cash_amount" property="cashAmount" jdbcType="DECIMAL" />
    <result column="unionpay_amount" property="unionpayAmount" jdbcType="DECIMAL" />
    <result column="card_amount" property="cardAmount" jdbcType="DECIMAL" />
    <result column="gift_amount" property="giftAmount" jdbcType="DECIMAL" />
    <result column="wechat_amount" property="wechatAmount" jdbcType="DECIMAL" />
    <result column="alipay_amount" property="alipayAmount" jdbcType="DECIMAL" />
    <result column="group_amount" property="groupAmount" jdbcType="DECIMAL" />
    <result column="cash_card_type" property="cashCardType" jdbcType="INTEGER" />
    <result column="combo_amount" property="comboAmount" jdbcType="DECIMAL" />
    <result column="coupon_amount" property="couponAmount" jdbcType="DECIMAL" />
    <result column="appoint_off" property="appointOff" jdbcType="INTEGER" />
    <result column="free_amount" property="freeAmount" jdbcType="CHAR" />
    <result column="debt_amount" property="debtAmount" jdbcType="DECIMAL" />
    <result column="real_amount" property="realAmount" jdbcType="DECIMAL" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <association property="detailList" column="order_id" select="selectPaymentDetailByOrderId"/>
  </resultMap>


  <resultMap id="SummaryMap" type="com.zefun.web.dto.StoreSummaryDto" >
    <result column="sdate" property="date" jdbcType="VARCHAR" />
    <result column="receivable_amount" property="receivableAmount" jdbcType="DOUBLE" />
    <result column="income" property="income" jdbcType="DOUBLE" />
    <result column="cash_amount" property="cashAmount" jdbcType="DOUBLE" />
    <result column="unionpay_amount" property="unionpayAmount" jdbcType="DOUBLE" />
    <result column="card_amount" property="cardAmount" jdbcType="DOUBLE" />
    <result column="gift_amount" property="giftAmount" jdbcType="DOUBLE" />
    <result column="wechat_amount" property="wechatAmount" jdbcType="DOUBLE" />
    <result column="alipay_amount" property="alipayAmount" jdbcType="DOUBLE" />
    <result column="group_amount" property="groupAmount" jdbcType="DOUBLE" />
    <result column="cash_card_type" property="cashCardType" jdbcType="INTEGER" />
    <result column="combo_amount" property="comboAmount" jdbcType="DOUBLE" />
    <result column="coupon_amount" property="couponAmount" jdbcType="DOUBLE" />
    <result column="appoint_off" property="appointOff" jdbcType="DOUBLE" />
    <result column="free_amount" property="freeAmount" jdbcType="DOUBLE" />
    <result column="debt_amount" property="debtAmount" jdbcType="DOUBLE" />
    <result column="expenses" property="expenses" jdbcType="DOUBLE" />
    <result column="amount" property="amount" jdbcType="DOUBLE" />
    <result column="t_cash_amount" property="cashRealAmount" jdbcType="DOUBLE" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="member_cnt" property="memberCnt" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap type="com.zefun.web.dto.DeptSummaryDto" id="deptMap">
  	<id column="dept_id" property="deptId"/>
  	<result column="dept_name" property="deptName"/>
  	<association property="deptListDetail" column="{deptId=dept_id,begin=begin,end=end}" select="getDetail"/>  		
  </resultMap>
  <resultMap type="com.zefun.web.dto.DeptCashIncome" id="cashMap">
  	<id property="deptId" column="dept_id"/>
  	<result property="deptName" column="dept_name"/>
  	<association property="deptDto" column="{deptId=dept_id,begin=begin,end=end}" select="selectCashIncomeByDept"></association>
  </resultMap>
  
  <resultMap type="com.zefun.web.dto.TrendDeptDataDto" id="cashTrendMap">
  	<id property="orderType" column="order_type"/>
  	<association property="trendDeptData" column="{orderType=order_type,begin=begin,end=end,dateType=dateType,storeId=storeId}" select="selectCashTrend"></association>
  </resultMap>
  
  <resultMap type="com.zefun.web.dto.DeptSummaryDto" id="deptSummaryMap">
  	<id column="dept_id" property="deptId"/>
  	<result column="dept_name" property="deptName"/>
  	<association property="businessIncome" column="{deptId=dept_id,begin=begin,end=end}" select="selectBusinessIncomePart"/>
  	<association property="chargedIncome" column="{deptId=dept_id,begin=begin,end=end}" select="selectChargedIncomePart"/>
  	<association property="businessDiscount" column="{deptId=dept_id,begin=begin,end=end}" select="selectBusinessDiscount"/>
  	<association property="cardConsumedAmt" column="{deptId=dept_id,begin=begin,end=end}" select="selectCardConsumedAmt"/>
  	<association property="comboDiscount" column="{deptId=dept_id,begin=begin,end=end}" select="selectComboDiscount"></association>
  </resultMap>
	
  <sql id="Base_Column_List" >
    order_id, store_id, order_type, member_id, level_id, sex, dept_id, order_code, hand_order_code, receivable_amount,
    discount_amount, cash_amount, unionpay_amount, card_amount, gift_amount, wechat_amount,
    alipay_amount, group_amount, cash_card_type, combo_amount, coupon_amount, appoint_off, free_amount, debt_amount,
    real_amount, order_status, is_order_option, option_employee_id, order_evaluate, appointment_id, is_share, is_deleted,
    create_time, update_time, last_operator_id
  </sql>
	
  <!-- 删除门店所有订单数据(清除测试数据)，by 张小胖 -->
  <delete id="deleteByStoreId" parameterType="java.lang.Integer">
    delete from order_info where store_id = #{storeId}
  </delete>

  <!-- 查询某个订单消费明细数据 -->
  <select id="selectOrderPaymentByOrderId" resultMap="OrderPaymentMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from order_info
    where order_id = #{orderId}
  </select>
  
  <select id="selectPaymentDetailByOrderId" resultType="com.zefun.web.dto.DetailPaymentDto" parameterType="java.lang.Integer">
    select
      detail_id as detailId,
      order_type as orderType,
      is_appoint as isAppoint,
      appoint_off as appointOff,
      project_id as projectId,
      project_name as projectName,
      project_price as projectPrice,
      project_count as projectCount,
      real_price as realPrice,
      discount_amount as discountAmount,
      service_length as serviceLength,
      case o.off_type
          when 1 then
              '疗程抵扣'
          when 2 then
              '优惠券抵扣'
          when 3 then
              '礼金抵扣'
          else
              ''
      end
      as offType,
      case o.off_type
          when 1 then
              o.project_price
          when 2 then
              (select c2.coupon_price from coupon_info c2 where c2.coupon_id = (select coupon_id from member_coupon))
          else
              o.gift_amount
      end
      as offAmount
  from order_detail o
  where order_id = #{orderId}
     and is_deleted = 0 and is_update = 0
  </select>

  <select id="selectOrderListByMemberId" resultMap="MemberOrderResultMap" parameterType="java.lang.Integer">
    select
        order_id, order_code, receivable_amount, discount_amount, cash_amount, unionpay_amount,
        card_amount, combo_amount, coupon_amount, free_amount, debt_amount, real_amount, appointment_id,
        is_share, order_status, update_time
    from order_info
    where member_id = #{memberId}
        and is_deleted = 0
        order by create_time desc
  </select>

  <select id="selectOrderStatisticsByStoreId" resultType="java.util.Map" parameterType="java.lang.Integer">
    select
        count(1) as count,
        IFNULL(sum(real_amount),0) as money
    from order_info
    where store_id = #{storeId}
        and order_status in (3, 4)
        and to_days(create_time) = to_days(now())
  </select>

  <select id="selectOrderStatisticsByEmployeeId" resultType="java.util.Map" parameterType="java.lang.Integer">
    select
        count(1) as count,
        IFNULL(sum(real_amount),0) as money
    from order_info
    where order_id in (
      select
          distinct(oi.order_id)
      from shift_mahjong_project_step sms
      left join order_detail od
      on sms.detail_id = od.detail_id
      left join order_info oi
      on od.order_id = oi.order_id
      where sms.employee_id = #{employeeId}
         and sms.is_deleted = 0
         and oi.order_status in (3, 4)
         and to_days(oi.create_time) = to_days(now())
   )
  </select>

  <select id="selectOrderIdByStoreIdNotOver" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select
        order_id
    from order_info
    where store_id = #{storeId}
        and order_status = 1
        and is_deleted = 0
        order by create_time desc
  </select>

  <select id="selectOrderIdByStoreIdIsOver" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select
        order_id
    from order_info
    where store_id = #{storeId}
      and order_status in (2, 5)
      and is_deleted = 0
      order by create_time desc
  </select>

  <select id="selectOrderIdByStoreIdHistory" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select
        order_id from order_info
    where store_id = #{storeId}
        and is_deleted = 0
        and to_days(create_time) = to_days(now())
        and order_status in (3, 4)
        order by create_time desc
  </select>

  <select id="selectOrderIdByEmployeeIdNotOver" resultType="java.lang.Integer" parameterType="java.lang.Integer">
  select distinct(a.orderId) from (select
                          oi.order_id as orderId, oi.order_status as orderStatus, oi.create_time as createTime
                      from shift_mahjong_project_step sms
                        left join order_detail od
                        on sms.detail_id = od.detail_id
                        left join order_info oi
                         on od.order_id = oi.order_id
                      where sms.employee_id = #{employeeId}
                         and oi.is_deleted = 0
                         and sms.is_deleted = 0
                         and od.is_deleted = 0
                         and od.order_type = 1
                         and oi.order_status = 1

                    union

                    select
                      oi.order_id as orderId, oi.order_status as orderStatus, oi.create_time as createTime
                     from order_detail od
                     left join order_info oi
                         on od.order_id = oi.order_id
                      where od.last_operator_id = #{employeeId}
                          and od.is_deleted = 0
                        and oi.is_deleted = 0
                        and od.order_type in (2, 3)
                        and oi.order_status = 1
                    ) a order by a.orderStatus asc, a.createTime desc
  </select>

  <select id="selectOrderIdByEmployeeIdIsOver" resultType="java.lang.Integer" parameterType="java.lang.Integer">
     select distinct(a.orderId) from (select
                          oi.order_id as orderId, oi.order_status as orderStatus, oi.create_time as createTime
                      from shift_mahjong_project_step sms
                        left join order_detail od
                        on sms.detail_id = od.detail_id
                        left join order_info oi
                         on od.order_id = oi.order_id
                      where sms.employee_id = #{employeeId}
                         and oi.is_deleted = 0
                         and sms.is_deleted = 0
                         and od.is_deleted = 0
                         and od.order_type = 1
                         and to_days(od.create_time) = to_days(now())
                         and oi.order_status in (2, 5)

                    union

                    select
                      oi.order_id as orderId, oi.order_status as orderStatus, oi.create_time as createTime
                     from order_detail od
                     left join order_info oi
                         on od.order_id = oi.order_id
                      where od.last_operator_id = #{employeeId}
                          and od.is_deleted = 0
                        and oi.is_deleted = 0
                        and to_days(od.create_time) = to_days(now())
                        and od.order_type in (2, 3)
                        and oi.order_status in (2, 5)
                    ) a order by a.orderStatus asc, a.createTime desc
  </select>

  <select id="selectOrderIdByEmployeeIdHistory" resultType="java.lang.Integer" parameterType="java.lang.Integer">
     select distinct(a.orderId) from (select
                          oi.order_id as orderId, oi.order_status as orderStatus, oi.create_time as createTime
                      from shift_mahjong_project_step sms
                        left join order_detail od
                        on sms.detail_id = od.detail_id
                        left join order_info oi
                         on od.order_id = oi.order_id
                      where sms.employee_id = #{employeeId}
                         and oi.is_deleted = 0
                         and sms.is_deleted = 0
                         and od.is_deleted = 0
                         and to_days(od.create_time) = to_days(now())
                         and od.order_type = 1
                         and oi.order_status in (3, 4)

                    union

                    select
                      oi.order_id as orderId, oi.order_status as orderStatus, oi.create_time as createTime
                     from order_detail od
                     left join order_info oi
                         on od.order_id = oi.order_id
                      where od.last_operator_id = #{employeeId}
                          and od.is_deleted = 0
                        and oi.is_deleted = 0
                        and to_days(od.create_time) = to_days(now())
                        and od.order_type in (2, 3)
                                            and oi.order_status in (3, 4)
                    ) a order by a.orderStatus asc, a.createTime desc
  </select>

  <select id="selectOrderBaseByOrderId" resultMap="OrderBaseResultMap" parameterType="java.lang.Integer">
    select
      order_id, member_id, sex, dept_id, order_code, hand_order_code, receivable_amount, discount_amount, cash_amount, unionpay_amount, gift_amount, appoint_off, wechat_amount, alipay_amount,
      card_amount, combo_amount, coupon_amount, group_amount, free_amount, debt_amount, real_amount, store_id, update_time,appointment_id,
      order_evaluate, order_status, is_share
  from order_info
  where order_id = #{orderId}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from order_info
    where order_id = #{orderId}
  </select>

  <select id="selectIsNotOver" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from order_info
    where is_deleted = 0
        and order_status in (1, 2, 5)
        and member_id = #{memberId}
  </select>

  <update id="updateEvaluateByOrderId" parameterType="com.zefun.web.entity.OrderInfo" >
    update order_info
    <set >
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=CHAR},
      </if>
      <if test="orderEvaluate != null" >
        order_evaluate = #{orderEvaluate,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId} and order_status = 3
  </update>
  
  <update id="updateIsOrderOption" parameterType="com.zefun.web.entity.OrderInfo" >
    update order_info
       set is_order_option = #{isOrderOption,jdbcType=INTEGER},
           option_employee_id = #{optionEmployeeId,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>

  <!-- 更新订单价格信息 -->
  <update id="updateTotalPrice" parameterType="java.lang.Integer" >
    update order_info a , (select sum(b.project_price * b.project_count) as price, sum(b.discount_amount * b.project_count) as discount from order_detail b where b.order_id = #{orderId,jdbcType=INTEGER} and b.is_update = 0 and b.is_deleted = 0) c
    set a.receivable_amount = c.price, a.discount_amount = c.discount where a.order_id  = #{orderId}
  </update>

  <!-- 根据订单条件查询 -->
 <select id="selectByCondition" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from order_info
    where store_id = #{storeId,jdbcType=INTEGER} and is_deleted = 0 and order_status = 5
      <if test="beginDate != null and endDate != null" >
        and CAST(replace(create_time,'-','') as UNSIGNED) between #{beginDate,jdbcType=INTEGER} and #{endDate,jdbcType=INTEGER}
      </if>
      <if test="deptId != null" >
        and dept_id in
        <foreach item="item" index="index" collection="deptId" open="("
            separator="," close=")">
            #{item}
        </foreach>
      </if>
      <if test="orderCode != null" >
        order_code = #{orderCode,jdbcType=DECIMAL},
      </if>
  </select>

  <resultMap id="UnfinishedOrderInfoMap" type="com.zefun.web.dto.SelfCashierOrderDto" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="order_code" property="orderCode" jdbcType="VARCHAR" />
    <result column="hand_order_code" property="handOrderCode" jdbcType="VARCHAR" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="receivable_amount" property="receivableAmount" jdbcType="DECIMAL" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="free_amount" property="freeAmount" jdbcType="CHAR" />
    <result column="debt_amount" property="debtAmount" jdbcType="DECIMAL" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <association property="memberInfo" column="member_id" select="com.zefun.web.mapper.MemberInfoMapper.selectMemberBaseInfo"></association>
    <association property="operateEmployee" column="last_operator_id" select="com.zefun.web.mapper.EmployeeInfoMapper.selectBaseInfoByEmployeeId" />
    <association property="serverEmployee" column="last_server_id" select="com.zefun.web.mapper.EmployeeInfoMapper.selectBaseInfoByEmployeeId" />
    <collection property="orderDetails" column="order_id" select="com.zefun.web.mapper.OrderDetailMapper.selectSelfCashierDetailMahjong" />
  </resultMap>

  <!-- 查询自助收银模块的概要订单信息 by luhwen 2015.10.21 18:00:00 -->
  <select id="selectUnfinishedOrderInfo" resultMap="UnfinishedOrderInfoMap" parameterType="java.util.Map">
    select
     oi.order_id,
     oi.member_id,
     oi.order_code,
     oi.hand_order_code,
     oi.sex,
     oi.receivable_amount,
     oi.discount_amount,
     oi.free_amount,
     oi.debt_amount,
     oi.order_status,
     oi.create_time,
     oi.last_operator_id,
     (select employee_id from shift_mahjong_project_step where employee_id is not null and detail_id in (select detail_id from order_detail where order_id = oi.order_id) order by is_over desc limit 0,1) as last_server_id
    from order_info oi
    where oi.store_id = #{storeId}
    and oi.is_deleted = 0
    <choose>
      	<when test="type == 1">
      		and oi.order_status = 1
      	</when>
      	<otherwise>
      	   and oi.order_status in (2, 5)
      	</otherwise>
     </choose>
  </select>

  <!-- 查询无纸开单 -->
  <select id="selectByNoPageOrderId" resultMap="UnfinishedOrderInfoMap" parameterType="java.util.Map">
    select
     oi.order_id,
     oi.member_id,
     oi.order_code,
     oi.hand_order_code,
     oi.sex,
     oi.receivable_amount,
     oi.discount_amount,
     oi.free_amount,
     oi.debt_amount,
     oi.order_status,
     oi.create_time,
     oi.last_operator_id,
     (select employee_id from shift_mahjong_project_step where employee_id is not null and detail_id in (select detail_id from order_detail where order_id = oi.order_id) order by is_over desc limit 0,1) as last_server_id
    from order_info oi
    where order_id = #{orderId}
  </select>

  <resultMap id="UnfinishedOrderDetailMap" type="com.zefun.web.dto.SelfCashierOrderDto" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <id column="member_id" property="memberId" jdbcType="INTEGER" />
    <id column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="order_code" property="orderCode" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="receivable_amount" property="receivableAmount" jdbcType="DECIMAL" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="free_amount" property="freeAmount" jdbcType="CHAR" />
    <result column="debt_amount" property="debtAmount" jdbcType="DECIMAL" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="CHAR"/>
    <!-- 订单详情 -->
    <collection property="orderDetails" column="order_id" select="com.zefun.web.mapper.OrderDetailMapper.selectSelfCashierDetail" />
  </resultMap>

  <!-- 自助收银模块的订单详情 -->
  <select id="selectUnfinishedOrderDetail" resultMap="UnfinishedOrderDetailMap" parameterType="java.lang.Integer">
      select
         a.order_id, a.member_id, a.dept_id, a.order_code,a.sex, a.receivable_amount, a.discount_amount, a.free_amount, a.debt_amount, a.order_status, a.create_time
      from order_info a
      where a.order_id = #{orderId}
  </select>

  <!-- 根据订单明细标识查询订单信息 -->
  <select id="selectByDetailId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from order_info a
    where exists(select 1 from order_detail b where b.order_id = a.order_id and b.detail_id = #{detailId} and b.is_deleted = 0) and a.is_deleted = 0
  </select>

  <update id="updateOrderMemberInfo" parameterType="java.util.Map">
    update order_info set member_id = #{memberId,jdbcType=INTEGER}
      where order_id = #{orderId,jdbcType=INTEGER}
        and member_id is null
  </update>

  <select id="selectCashierStatInfo" parameterType="java.util.Map" resultType="com.zefun.web.dto.SelfCashierStatDto">
    select
      sum(if(order_status = 1 or order_status = 2 or order_status = 5, 1, 0)) as unpayCount,
      sum(if(order_status = 1 or order_status = 2 or order_status = 5, ifnull(real_amount, 0), 0)) as unpayAmount,
      sum(if(order_status = 3 or order_status = 4, 1, 0)) as payCount,
      sum(if(order_status = 3 or order_status = 4, ifnull(real_amount, 0), 0)) as payAmount
   from order_info
   where
    store_id = #{storeId}
    and substring(create_time, 1, 10) &gt;= #{starTime,jdbcType=CHAR}
    and substring(create_time, 1, 10) &lt;= #{endTime,jdbcType=CHAR}
    and is_deleted = 0
  </select>

  <resultMap id="DayBookResultMap" type="com.zefun.web.dto.DayBookDto" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="order_code" property="orderCode" jdbcType="INTEGER" />
    <result column="discount_amount" property="realPrice" jdbcType="DECIMAL" />
    <result column="gift_amount" property="giftAmount" jdbcType="DECIMAL" />
    <result column="cash_amount" property="cashAmount" jdbcType="DECIMAL" />
    <result column="unionpay_amount" property="unionpayAmount" jdbcType="DECIMAL" />
    <result column="card_amount" property="cardAmount" jdbcType="DECIMAL" />
    <result column="wechat_amount" property="wechatAmount" jdbcType="DECIMAL" />
    <result column="alipay_amount" property="alipayAmount" jdbcType="DECIMAL" />
    <result column="combo_amount" property="comboAmount" jdbcType="DECIMAL" />
    <result column="coupon_amount" property="couponAmount" jdbcType="DECIMAL" />
    <result column="free_amount" property="freeAmount" jdbcType="CHAR" />
    <result column="group_amount" property="groupAmount" jdbcType="DECIMAL" />
    <result column="debt_amount" property="debtAmount" jdbcType="DECIMAL" />
    <result column="real_amount" property="realAmount" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <association property="memberName" column="member_id" select="com.zefun.web.mapper.MemberInfoMapper.selectMemberNameByMemberId"></association>
    <association property="projectName" column="order_id" select="com.zefun.web.mapper.OrderDetailMapper.selectOrderDetailNameByOrderId"></association>
	<association property="orderDetailList" column="order_id" select="com.zefun.web.mapper.OrderDetailMapper.selectDetailListByOrderId" />
	<association property="deptList" column="order_id" select="com.zefun.web.mapper.DeptObjectiveMapper.selectByDapt" />
 	
  </resultMap>

  <sql id="selectDayBookInfo">
    from order_info
        <where>
          store_id = #{storeId} and (order_status = 3 or order_status = 4) and is_deleted = #{isDeleted}
             <if test="beginTime != null">
                and create_time &gt;= #{beginTime}
             </if>
             <if test="endTime != null">
                and create_time &lt;= #{endTime}
             </if>
             <if test="queryCode != null and queryCode != ''">
                 and (order_code like CONCAT('%',#{queryCode,jdbcType=INTEGER},'%')
                 or member_id = (select member_id from member_info where store_id = #{storeId,jdbcType=INTEGER}
                           and phone = #{queryCode,jdbcType=INTEGER})
                 )
             </if>
           </where>
  </sql>

  <select id="selectByPage" resultMap="DayBookResultMap" parameterType="com.zefun.web.entity.Page">
    select oi.order_id, oi.member_id, oi.sex, oi.order_code, ifnull(oi.discount_amount, 0) as discount_amount,
      ifnull(oi.gift_amount, 0) as gift_amount, ifnull(oi.cash_amount, 0) as cash_amount,
      ifnull(oi.unionpay_amount, 0) as unionpay_amount, ifnull(oi.card_amount, 0) as card_amount,
      ifnull(oi.wechat_amount, 0) as wechat_amount, ifnull(oi.alipay_amount, 0) as alipay_amount,
      ifnull(oi.combo_amount,0) as combo_amount, ifnull(oi.coupon_amount, 0) as coupon_amount,
      ifnull(oi.free_amount, 0) as free_amount, ifnull(oi.debt_amount, 0) as debt_amount,
      ifnull(oi.group_amount, 0) as group_amount, ifnull(oi.real_amount, 0) as real_amount,
      DATE_FORMAT(oi.create_time,'%Y-%m-%d %H:%i') as create_time
      from order_info oi
      <where>
        oi.store_id = #{params.daybook.storeId} and (oi.order_status = 3 or oi.order_status = 4) 
		      	<if test="params.daybook.queryCode != null and params.daybook.queryCode != ''">
		      		and (oi.order_code = #{params.daybook.queryCode} 
		      			 or oi.member_id = (select member_id from member_info where store_id = #{params.daybook.storeId} and phone = #{params.daybook.queryCode} and is_deleted = 0)
		      			 or exists(select 1 from employee_info ei, order_detail od 
	  						left join employee_commission ec on od.detail_id = ec.detail_id
		      				where ei.employee_code=#{params.daybook.queryCode} 
		      				and ei.store_id = #{params.daybook.storeId} 
		      				and oi.order_id = od.order_id  
		      				and ei.is_deleted = 0 
		      				and ei.employee_id = ec.employee_id)
		            )
		      	</if>
		      	<if test="params.daybook.orderType != null and params.daybook.orderType != '' and params.daybook.orderType != 0">
		      		 and exists(select 1 from order_detail od where oi.order_id = od.order_id and od.order_type = #{params.daybook.orderType})
		      	</if>
		      	<if test="params.daybook.moneyWay != null and params.daybook.moneyWay != '' and params.daybook.moneyWay != 0">
		      		 <choose>
				      	<when test="params.daybook.moneyWay == 1">
				      		and oi.cash_amount &gt; 0 
				      	</when>
				      	<when test="params.daybook.moneyWay == 2">
				      		and oi.unionpay_amount &gt; 0
				      	</when>
				      	<when test="params.daybook.moneyWay == 3">
				      		and oi.group_amount &gt; 0
				      	</when>
				      	<when test="params.daybook.moneyWay == 4">
				      		and oi.wechat_amount &gt; 0
				      	</when>
				      	<when test="params.daybook.moneyWay == 5">
				      		and oi.alipay_amount &gt; 0
				      	</when>
				      	<when test="params.daybook.moneyWay == 6">
				      		and oi.card_amount &gt; 0
				      	</when>
				      	<when test="params.daybook.moneyWay == 7">
				      		and oi.gift_amount &gt; 0
				      	</when>
				      	<when test="params.daybook.moneyWay == 8">
				      		and oi.combo_amount &gt; 0
				      	</when>
				      	<when test="params.daybook.moneyWay == 9">
				      		and oi.coupon_amount &gt; 0
				      	</when>
				      	<when test="params.daybook.moneyWay == 10">
				      		and oi.debt_amount &gt; 0
				      	</when>
				     </choose>
		      	</if>
		      	<if test="params.daybook.orderState != null and params.daybook.orderState != '' and params.daybook.orderState != 0">
		           <choose>
			      	<when test="params.daybook.orderState == 1">
			      		 and oi.is_deleted = 0
			      	</when>
			      	<when test="params.daybook.orderState == 2">
			      		 and oi.is_deleted = 1
			      	</when>
			      </choose>
		        </if>
		        <if test="params.daybook.deptId != null and params.daybook.deptId != '' and params.daybook.deptId != 0">
		            and exists(select 1 from order_detail od where oi.order_id = od.order_id and od.dept_id = #{params.daybook.deptId})
		        </if>
	      		<if test="params.daybook.beginTime != null">
		           and oi.create_time &gt;= #{params.daybook.beginTime}
		        </if>
		        <if test="params.daybook.endTime != null">
		           and oi.create_time &lt;= #{params.daybook.endTime}
		        </if>
			      <choose>
			      	<when test="params.daybook.timeOrder == 1">
			      		order by oi.create_time asc
			      	</when>
			      	<when test="params.daybook.timeOrder == 2">
			      		order by oi.create_time desc
			      	</when>
			      </choose>
			      <choose>
			      	<when test="params.daybook.receivableOrder == 1">
			      		order by oi.discount_amount asc
			      	</when>
			      	<when test="params.daybook.receivableOrder == 2">
			      		order by oi.discount_amount desc
			      	</when>
			      </choose>
			      <choose>
			      	<when test="params.daybook.cashOrder == 1">
			      		order by oi.cash_amount asc
			      	</when>
			      	<when test="params.daybook.cashOrder == 2">
			      		order by oi.cash_amount desc
			      	</when>
			      </choose>
			      <choose>
			      	<when test="params.daybook.unionpayOrder == 1">
			      		order by oi.unionpay_amount asc
			      	</when>
			      	<when test="params.daybook.unionpayOrder == 2">
			      		order by oi.unionpay_amount desc
			      	</when>
			      </choose>
			      <choose>
			      	<when test="params.daybook.netpayOrder == 1">
			      		order by oi.wechat_amount asc, oi.alipay_amount asc
			      	</when>
			      	<when test="params.daybook.netpayOrder == 2">
			      		order by oi.wechat_amount desc, oi.alipay_amount desc
			      	</when>
			      </choose>
			      <choose>
			      	<when test="params.daybook.cardOrder == 1">
			      		order by oi.card_amount asc
			      	</when>
			      	<when test="params.daybook.cardOrder == 2">
			      		order by oi.card_amount desc
			      	</when>
			      </choose>
			      <choose>
			      	<when test="params.daybook.comboOrder == 1">
			      		order by oi.combo_amount asc
			      	</when>
			      	<when test="params.daybook.comboOrder == 2">
			      		order by oi.combo_amount desc
			      	</when>
			      </choose>
			      <choose>
			      	<when test="params.daybook.giftOrder == 1">
			      		order by oi.gift_amount asc
			      	</when>
			      	<when test="params.daybook.giftOrder == 2">
			      		order by oi.gift_amount desc
			      	</when>
			      </choose>
			      <choose>
			      	<when test="params.daybook.couponOrder == 1">
			      		order by oi.coupon_amount asc
			      	</when>
			      	<when test="params.daybook.couponOrder == 2">
			      		order by oi.coupon_amount desc
			      	</when>
			      </choose>
			      <choose>
			      	<when test="params.daybook.grouppayOrder == 1">
			      		order by oi.group_amount asc
			      	</when>
			      	<when test="params.daybook.grouppayOrder == 2">
			      		order by oi.group_amount desc
			      	</when>
			      </choose>
			      <choose>
			      	<when test="params.daybook.debtOrder == 1">
			      		order by oi.debt_amount asc
			      	</when>
			      	<when test="params.daybook.debtOrder == 2">
			      		order by oi.debt_amount desc
			      	</when>
			      </choose>
			      <choose>
			      	<when test="params.daybook.realOrder == 1">
			      		order by oi.real_amount asc
			      	</when>
			      	<when test="params.daybook.realOrder == 2">
			      		order by oi.real_amount desc
			      	</when>
			      </choose>
      </where>
  </select>
  
  <select id="selectDayBookInfoCount" parameterType="com.zefun.web.dto.DayBookQueryDto" resultType="com.zefun.web.dto.DayBookDto" >
    select
     ifnull(sum(oi.discount_amount), 0) as receivableAmount,
     ifnull(sum(oi.real_amount), 0) as realPrice,
     ifnull(sum(oi.cash_amount), 0) as cashAmount,
     ifnull(sum(oi.unionpay_amount), 0) as unionpayAmount,
     ifnull(sum(oi.card_amount), 0) as cardAmount,
     ifnull(sum(oi.wechat_amount), 0) as wechatAmount,
     ifnull(sum(oi.alipay_amount), 0) as alipayAmount,
     ifnull(sum(oi.group_amount), 0) as groupAmount,
     ifnull(sum(oi.combo_amount), 0) as comboAmount,
     ifnull(sum(oi.gift_amount), 0) as giftAmount,
     ifnull(sum(oi.coupon_amount), 0) as couponAmount,
     ifnull(sum(oi.free_amount), 0) as freeAmount,
     ifnull(sum(oi.debt_amount), 0) as debtAmount,
     count(1) as count
     from order_info oi
     <where>
        oi.store_id = #{storeId} and (oi.order_status = 3 or oi.order_status = 4) 
		      	<if test="queryCode != null and queryCode != ''">
		      		and (oi.order_code = #{queryCode} 
		      			or oi.member_id = (select member_id from member_info 
		      				where store_id = #{storeId} and phone = #{queryCode} and is_deleted = 0)
		      				or exists(select 1 from employee_info ei, order_detail od 
	 						left join employee_commission ec on od.detail_id = ec.detail_id
		      				where ei.employee_code=#{queryCode} and oi.order_id = od.order_id  
		      				and ei.store_id = #{storeId} 
		      				and ei.is_deleted = 0 
		      				and ei.employee_id = ec.employee_id)
		            )
		      	</if>
		      	<if test="orderType != null and orderType != '' and orderType != 0">
		      		 and exists(select 1 from order_detail od where oi.order_id = od.order_id and od.order_type = #{orderType})
		      	</if>
		      	<if test="moneyWay != null and moneyWay != '' and moneyWay != 0">
		      		 <choose>
				      	<when test="moneyWay == 1">
				      		and oi.cash_amount &gt; 0 
				      	</when>
				      	<when test="moneyWay == 2">
				      		and oi.unionpay_amount &gt; 0
				      	</when>
				      	<when test="moneyWay == 3">
				      		and oi.group_amount &gt; 0
				      	</when>
				      	<when test="moneyWay == 4">
				      		and oi.wechat_amount &gt; 0
				      	</when>
				      	<when test="moneyWay == 5">
				      		and oi.alipay_amount &gt; 0
				      	</when>
				      	<when test="moneyWay == 6">
				      		and oi.card_amount &gt; 0
				      	</when>
				      	<when test="moneyWay == 7">
				      		and oi.gift_amount &gt; 0
				      	</when>
				      	<when test="moneyWay == 8">
				      		and oi.combo_amount &gt; 0
				      	</when>
				      	<when test="moneyWay == 9">
				      		and oi.coupon_amount &gt; 0
				      	</when>
				      	<when test="moneyWay == 10">
				      		and oi.debt_amount &gt; 0
				      	</when>
				     </choose>
		      	</if>
		      	<if test="orderState != null and orderState != '' and orderState != 0">
		           <choose>
			      	<when test="orderState == 1">
			      		 and oi.is_deleted = 0
			      	</when>
			      	<when test="orderState == 2">
			      		 and oi.is_deleted = 1
			      	</when>
			      </choose>
		        </if>
		        <if test="deptId != null and deptId != '' and deptId != 0">
		            and exists(select 1 from order_detail od where oi.order_id = od.order_id and od.dept_id = #{deptId})
		        </if>
	      		<if test="beginTime != null">
		           and oi.create_time &gt;= #{beginTime}
		        </if>
		        <if test="endTime != null">
		           and oi.create_time &lt;= #{endTime}
		        </if>
      </where>
  </select>

  <select id="selectDetailCountForType" parameterType="com.zefun.web.dto.DayBookQueryDto" resultType="java.util.Map">
    select
         ifnull(sum(if(order_type = 1, real_price, 0)),0) as projectSalesAmount,
         ifnull(sum(if(order_type = 1, 1, 0)),0) as projectSalesCount,
         ifnull(sum(if(order_type = 2, real_price, 0)),0) as goodsSalesAmount,
         ifnull(sum(if(order_type = 2, 1, 0)),0) as goodsSalesCount,
         ifnull(sum(if(order_type = 3, real_price, 0)),0) as comboSalesAmount,
         ifnull(sum(if(order_type = 3, 1, 0)),0) as comboSalesCount,
         ifnull(sum(if(order_type in (4, 5, 6), real_price, 0)),0) as cardSalesAmount,
         ifnull(sum(if(order_type in (4, 5, 6), 1, 0)),0) as cardSalesCount,
         ifnull(sum(if(order_type = 7, project_price, 0)),0) as presentAmount,
         ifnull(sum(if(order_type = 7, 1, 0)),0) as presentCount
    from order_detail
    where order_id in
        (select order_id from order_info
            where store_id = #{storeId} and order_status in (3 ,4) and is_deleted = 0
            <if test="beginTime != null">
                 and create_time &gt;= #{beginTime}
            </if>
            <if test="endTime != null">
                 and create_time &lt;= #{endTime}
            </if>
          )
          and is_deleted = 0 and is_update = 0
  </select>

  <select id="selectDayBookStat" parameterType="com.zefun.web.dto.DayBookQueryDto" resultType="com.zefun.web.dto.DayBookStatDto">
    select ifnull(sum(if(order_status = 1, 0, 1)),0) as projectAmount,
         ifnull(sum(if(order_status = 2, 0, 1)),0) as goodsAmount,
         ifnull(sum(if(order_status = 3, 0, 1)),0) as comboAmount,
         ifnull(sum(if(order_status = 4, 0, 1)),0) as cardAmount
      from order_detail
      where order_id in (select order_id <include refid="selectDayBookInfo" />)
  </select>

  <update id="updateOrderShare" parameterType="java.lang.Integer">
    update order_info set is_share = 1
        where order_id = #{orderId,jdbcType=INTEGER}
            and is_share = 0
  </update>


  <update id="updateFreeAmount" parameterType="java.lang.Integer">
    update order_info a set a.free_amount = (select sum(c.free_amount) from order_detail c where c.order_id = a.order_id and c.is_deleted = 0)
    where a.is_deleted = 0 and exists(select 1 from order_detail b where b.detail_id = #{detailId,jdbcType=INTEGER} and b.order_id = a.order_id and b.is_deleted = 0)
  </update>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_info where order_id = #{orderId}
  </delete>

 <insert id="insert" parameterType="com.zefun.web.entity.OrderInfo" useGeneratedKeys = "true" keyProperty="orderId">
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="levelId != null" >
        level_id,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="orderCode != null" >
        order_code,
      </if>
      <if test="handOrderCode != null" >
        hand_order_code,
      </if>
      <if test="receivableAmount != null" >
        receivable_amount,
      </if>
      <if test="discountAmount != null" >
        discount_amount,
      </if>
      <if test="cashAmount != null" >
        cash_amount,
      </if>
      <if test="unionpayAmount != null" >
        unionpay_amount,
      </if>
      <if test="cardAmount != null" >
        card_amount,
      </if>
      <if test="giftAmount != null" >
        gift_amount,
      </if>
      <if test="wechatAmount != null" >
        wechat_amount,
      </if>
      <if test="alipayAmount != null" >
        alipay_amount,
      </if>
      <if test="groupAmount != null" >
        group_amount,
      </if>
      <if test="cashCardType != null" >
        cash_card_type,
      </if>
      <if test="comboAmount != null" >
        combo_amount,
      </if>
      <if test="couponAmount != null" >
        coupon_amount,
      </if>
      <if test="appointOff != null" >
        appoint_off,
      </if>
      <if test="freeAmount != null" >
        free_amount,
      </if>
      <if test="debtAmount != null" >
        debt_amount,
      </if>
      <if test="realAmount != null" >
        real_amount,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="orderEvaluate != null" >
        order_evaluate,
      </if>
      <if test="appointmentId != null" >
        appointment_id,
      </if>
      <if test="isShare != null" >
        is_share,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="levelId != null" >
        #{levelId,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="orderCode != null" >
        #{orderCode,jdbcType=CHAR},
      </if>
      <if test="handOrderCode != null" >
        #{handOrderCode,jdbcType=CHAR},
      </if>
      <if test="receivableAmount != null" >
        #{receivableAmount,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null" >
        #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="cashAmount != null" >
        #{cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="unionpayAmount != null" >
        #{unionpayAmount,jdbcType=DECIMAL},
      </if>
      <if test="cardAmount != null" >
        #{cardAmount,jdbcType=DECIMAL},
      </if>
      <if test="giftAmount != null" >
        #{giftAmount,jdbcType=DECIMAL},
      </if>
      <if test="wechatAmount != null" >
        #{wechatAmount,jdbcType=DECIMAL},
      </if>
      <if test="alipayAmount != null" >
        #{alipayAmount,jdbcType=DECIMAL},
      </if>
      <if test="groupAmount != null" >
        #{groupAmount,jdbcType=DECIMAL},
      </if>
      <if test="cashCardType != null" >
     	 #{cashCardType,jdbcType=INTEGER},
      </if>
      <if test="comboAmount != null" >
        #{comboAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponAmount != null" >
        #{couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="appointOff != null" >
        #{appointOff,jdbcType=INTEGER},
      </if>
      <if test="freeAmount != null" >
        #{freeAmount,jdbcType=CHAR},
      </if>
      <if test="debtAmount != null" >
        #{debtAmount,jdbcType=DECIMAL},
      </if>
      <if test="realAmount != null" >
        #{realAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="orderEvaluate != null" >
        #{orderEvaluate,jdbcType=VARCHAR},
      </if>
      <if test="appointmentId != null" >
        #{appointmentId,jdbcType=INTEGER},
      </if>
      <if test="isShare != null" >
        #{isShare,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=CHAR},
      </if>
      <if test="lastOperatorId != null" >
        #{lastOperatorId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.zefun.web.entity.OrderInfo" >
    update order_info
    <set >
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="levelId != null" >
        level_id = #{levelId,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="orderCode != null" >
        order_code = #{orderCode,jdbcType=CHAR},
      </if>
      <if test="handOrderCode != null" >
        hand_order_code = #{handOrderCode,jdbcType=CHAR},
      </if>
      <if test="receivableAmount != null" >
        receivable_amount = #{receivableAmount,jdbcType=DECIMAL},
      </if>
      <if test="discountAmount != null" >
        discount_amount = #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="cashAmount != null" >
        cash_amount = #{cashAmount,jdbcType=DECIMAL},
      </if>
      <if test="unionpayAmount != null" >
        unionpay_amount = #{unionpayAmount,jdbcType=DECIMAL},
      </if>
      <if test="cardAmount != null" >
        card_amount = #{cardAmount,jdbcType=DECIMAL},
      </if>
      <if test="giftAmount != null" >
        gift_amount = #{giftAmount,jdbcType=DECIMAL},
      </if>
      <if test="wechatAmount != null" >
        wechat_amount = #{wechatAmount,jdbcType=DECIMAL},
      </if>
      <if test="alipayAmount != null" >
        alipay_amount = #{alipayAmount,jdbcType=DECIMAL},
      </if>
      <if test="groupAmount != null" >
        group_amount = #{groupAmount,jdbcType=DECIMAL},
      </if>
      <if test="cashCardType != null" >
        cash_card_type = #{cashCardType,jdbcType=INTEGER},
      </if>
      <if test="comboAmount != null" >
        combo_amount = #{comboAmount,jdbcType=DECIMAL},
      </if>
      <if test="couponAmount != null" >
        coupon_amount = #{couponAmount,jdbcType=DECIMAL},
      </if>
      <if test="appointOff != null" >
        appoint_off = #{appointOff,jdbcType=INTEGER},
      </if>
      <if test="freeAmount != null" >
        free_amount = #{freeAmount,jdbcType=CHAR},
      </if>
      <if test="debtAmount != null" >
        debt_amount = #{debtAmount,jdbcType=DECIMAL},
      </if>
      <if test="realAmount != null" >
        real_amount = #{realAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="orderEvaluate != null" >
        order_evaluate = #{orderEvaluate,jdbcType=VARCHAR},
      </if>
      <if test="appointmentId != null" >
        appointment_id = #{appointmentId,jdbcType=INTEGER},
      </if>
      <if test="isShare != null" >
        is_share = #{isShare,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=CHAR},
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id = #{lastOperatorId,jdbcType=INTEGER},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>

  <select id="selectIsCanDeletedMember" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from order_info WHERE member_id = #{memberId} AND is_deleted = 0 AND (order_status = 1 OR order_status = 2)
  </select>


  <select id="selectSummary" parameterType="java.util.Map" resultMap="SummaryMap">
    select
        left(a.create_time,10) as sdate,
        sum(a.receivable_amount) as receivable_amount,
        sum(a.discount_amount) as income,
        sum(a.cash_amount) as cash_amount,
        sum(a.unionpay_amount) as unionpay_amount,
        sum(a.card_amount) as card_amount,
        sum(a.gift_amount) as gift_amount,
        sum(a.wechat_amount) as wechat_amount,
        sum(a.alipay_amount) as alipay_amount,
        sum(a.group_amount) as group_amount,
        sum(a.combo_amount) as combo_amount,
        sum(a.coupon_amount) as coupon_amount,
        sum(a.appoint_off) as appoint_off,
        sum(a.free_amount) as free_amount,
        sum(a.debt_amount) as debt_amount,
        sum(a.card_amount + a.debt_amount + a.gift_amount + a.combo_amount + a.coupon_amount + a.appoint_off) as expenses,
        sum(a.real_amount) as amount,
        sum(a.group_amount + a.wechat_amount + a.alipay_amount + a.cash_amount + a.unionpay_amount) as t_cash_amount,
        b.dept_id as dept_id,
        b.order_type as order_type,
        a.member_id as member_id,
        count(distinct(IF(a.member_id,a.member_id, a.order_id))) as member_cnt
    from
    order_info as a, order_detail as b
    where
        a.store_id = #{storeId,jdbcType=INTEGER} and
        a.create_time <![CDATA[ >= ]]>  #{begin,jdbcType=CHAR} and
        a.create_time <![CDATA[ < ]]> #{end,jdbcType=CHAR} and
        (a.order_status = 3 or a.order_status = 4) and
        a.is_deleted = 0 and
        a.order_id = b.order_id and
        b.dept_id in (select dept_id from dept_info where store_id= #{storeId,jdbcType=INTEGER} and is_deleted=0) and
        b.is_deleted = 0 and
        b.is_update = 0
        <if test="orderTypes != null">
        and
        b.order_type in
          <foreach collection="orderTypes" item="ot" index="index"
            open="(" separator="," close=")">#{ot}
          </foreach>
        </if>
    group by sdate, dept_id, order_type, member_id
  </select>
  
  <select id="getCurrSummaryData" parameterType="com.zefun.web.dto.SummaryResultDto"
  	resultType="com.zefun.web.dto.DeptLaborSummaryDto">
		SELECT
			COUNT(detail_id) totalServicedCustomer,
			COUNT(detail_id) customerNum,
			SUM(IFNULL(real_price, 0)) totalLaborIncome
		from
			order_detail
		WHERE
			order_id IN (
				SELECT
					order_id
				from
					order_info
				WHERE
					store_id = #{storeId}
				AND is_deleted = 0
				AND create_time <![CDATA[>=]]> #{begin}
				AND create_time <![CDATA[<]]> #{end}
				AND order_status IN (3, 4)
			)
		AND order_type = 1
  </select>

  <!-- <select id="countCurDaySummaryRelatedData" parameterType="com.zefun.web.dto.LaborPerformanceSummaryDto"
    resultType="com.zefun.web.entity.DeptCurrentSummary">
    SELECT COUNT(order_id) customerNum,SUM(discount_amount) totalIncome
    from order_info
    WHERE
        create_time <![CDATA[ >= ]]>  #{begin,jdbcType=CHAR} AND
        create_time <![CDATA[ < ]]> #{end,jdbcType=CHAR} AND is_deleted = 0
  </select>

  <select id="getDeptLaborPerformanceByCategory" parameterType="com.zefun.web.dto.LaborPerformanceSummaryDto"
    resultType="com.zefun.web.vo.ProjectLaborPerformanceVo">
    SELECT
  SUM(discount_amount) curDeptSumIncome,
  SUM(project_count) consumeNum,
  pi.category_id seriesId,
  od.project_id projectId,
  pi.dept_id deptId
  from
  order_detail od,
  project_info pi
  WHERE od.project_id = pi.project_id
  AND od.order_type = 1
  AND SUBSTR(od.create_time,1,10) = CURDATE()
  GROUP BY pi.project_id
  </select> -->
  
  <select id="selectTatalCashAmount" parameterType="java.util.Map" resultType="java.util.Map">
     select 
	    ifnull(sum(cash_amount) + sum(unionpay_amount) + sum(wechat_amount) + sum(alipay_amount) + sum(group_amount), 0) as totalAmount, 
		ifnull(sum(cash_amount), 0) as cashAmount, ifnull(sum(unionpay_amount), 0) as unionpayAmount,
		ifnull(sum(wechat_amount), 0) as wechatAmount, ifnull(sum(alipay_amount), 0) as alipayAmount, ifnull(sum(group_amount), 0) as groupAmount
	from order_info 
	where store_id = #{storeId,jdbcType=INTEGER} and substring(create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} and substring(create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR}
	and is_deleted = 0 and order_status in (3, 4) 
  </select>
  
  <sql id="flow_sql_now" >
    AND STR_TO_DATE(create_time, '%Y-%m-%d') =  STR_TO_DATE(NOW(), '%Y-%m-%d') AND (order_status = 3 or order_status = 4) AND is_deleted = 0
  </sql>
  <sql id="flow_sql_month" >
    AND STR_TO_DATE(create_time, '%Y-%m-%d') BETWEEN STR_TO_DATE(#{flowStartDate }, '%Y-%m-%d') AND STR_TO_DATE(#{flowStopDate }, '%Y-%m-%d') AND (order_status = 3 or order_status = 4) AND is_deleted = 0
  </sql>
  <sql id="flow_sql_year" >
    AND STR_TO_DATE(create_time, '%Y-%m-%d') BETWEEN STR_TO_DATE(#{flowStartDate }, '%Y-%m-%d') AND STR_TO_DATE(#{flowStopDate }, '%Y-%m-%d') AND (order_status = 3 or order_status = 4) AND is_deleted = 0
  </sql>
  <select id="selectCustomerFlow" parameterType="java.util.Map" resultType="com.zefun.web.dto.CustomerAnalysisDto">
  SELECT 
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NULL AND sex = '男' AND store_id = #{storeId} 
		<choose>
			<when test="searchType == 'day'"><include refid="flow_sql_now"/></when>
			<when test="searchType == 'month'"><include refid="flow_sql_month"/></when>
			<when test="searchType == 'year'"><include refid="flow_sql_year"/></when>
		</choose> 
	  ) AS 'sankManCount',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NULL AND sex = '女' AND store_id = #{storeId}
		<choose>
			<when test="searchType == 'day'"><include refid="flow_sql_now"/></when>
			<when test="searchType == 'month'"><include refid="flow_sql_month"/></when>
			<when test="searchType == 'year'"><include refid="flow_sql_year"/></when>
		</choose>   
	  ) AS 'sankWomenCount',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NOT NULL AND sex = '男' AND store_id = #{storeId}  
		<choose>
			<when test="searchType == 'day'"><include refid="flow_sql_now"/></when>
			<when test="searchType == 'month'"><include refid="flow_sql_month"/></when>
			<when test="searchType == 'year'"><include refid="flow_sql_year"/></when>
		</choose> ) AS 'memberManCount',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NOT NULL AND sex = '女' AND store_id = #{storeId}  
		<choose>
			<when test="searchType == 'day'"><include refid="flow_sql_now"/></when>
			<when test="searchType == 'month'"><include refid="flow_sql_month"/></when>
			<when test="searchType == 'year'"><include refid="flow_sql_year"/></when>
		</choose> 
	) AS 'memberWomenCount'
  from DUAL
  </select>
  
  <sql id="flux_sql_base" >
    AND store_id = #{storeId } AND (order_status = 3 or order_status = 4) AND is_deleted = 0 AND (create_time BETWEEN #{fluxStartDate} AND #{fluxStopDate})
  </sql>
  
  <select id="selectCustomerFlux" parameterType="java.util.Map" resultType="com.zefun.web.dto.CustomerAnalysisDto">
   SELECT 
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NOT NULL <include refid="flux_sql_base"/> AND ('22:00:00' &lt; STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') &lt; '11:00:00')) AS 'melevenBefore',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NOT NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '11:00:00' AND '12:00:00')) AS 'mtwelve',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NOT NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '12:00:00' AND '13:00:00')) AS 'mone',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NOT NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '13:00:00' AND '14:00:00')) AS 'mtwo',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NOT NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '14:00:00' AND '15:00:00')) AS 'mthree',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NOT NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '15:00:00' AND '16:00:00')) AS 'mfore',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NOT NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '16:00:00' AND '17:00:00')) AS 'mfive',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NOT NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '17:00:00' AND '18:00:00')) AS 'msix',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NOT NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '18:00:00' AND '19:00:00')) AS 'mseven',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NOT NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '19:00:00' AND '20:00:00')) AS 'meight',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NOT NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '20:00:00' AND '21:00:00')) AS 'mnine',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NOT NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '21:00:00' AND '22:00:00')) AS 'mten',
	
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NULL <include refid="flux_sql_base"/> AND ('22:00:00' &lt; STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') &lt; '11:00:00')) AS 'selevenBefore',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '11:00:00' AND '12:00:00')) AS 'stwelve',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '12:00:00' AND '13:00:00')) AS 'sone',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '13:00:00' AND '14:00:00')) AS 'stwo',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '14:00:00' AND '15:00:00')) AS 'sthree',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '15:00:00' AND '16:00:00')) AS 'sfore',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '16:00:00' AND '17:00:00')) AS 'sfive',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '17:00:00' AND '18:00:00')) AS 'ssix',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '18:00:00' AND '19:00:00')) AS 'sseven',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '19:00:00' AND '20:00:00')) AS 'seight',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '20:00:00' AND '21:00:00')) AS 'snine',
	(SELECT COUNT(1) from `order_info` WHERE member_id IS NULL <include refid="flux_sql_base"/> AND (STR_TO_DATE(RIGHT(create_time, 8), '%H:%i:%s') BETWEEN '21:00:00' AND '22:00:00')) AS 'sten'
   from dual
  </select>
  
  <sql id="flol_sql_base" >
     store_id = #{storeId } AND order_type =1 AND (order_status = 3 or order_status = 4) AND is_deleted = 0  AND (STR_TO_DATE(create_time, '%Y-%m-%d') BETWEEN STR_TO_DATE(#{flolStartDate }, '%Y-%m-%d') AND STR_TO_DATE(#{flolStopDate }, '%Y-%m-%d'))
  </sql>
  <select id="selectCustomerFlol" parameterType="java.util.Map" resultType="java.lang.Integer">
  	SELECT COUNT(1) from order_info WHERE  <include refid="flol_sql_base"/>
  </select>
  
  <select id="selectCustomerAnalysisLevel" parameterType="java.util.Map" resultType="java.math.BigDecimal">
  SELECT 
	CASE od.off_type
	WHEN 1 THEN 
		(SELECT cp.combo_performance_cal from combo_project cp WHERE cp.project_id = od.project_id AND 
		cp.combo_id = (SELECT mcp.combo_id from member_combo_project mcp WHERE mcp.detail_id = od.combo_id))
	ELSE od.discount_amount
	END AS discount_amount
	from order_detail od WHERE od.order_type = 1 AND od.is_deleted = 0 AND od.is_update = 0 AND od.order_status = 3 
	AND od.order_id IN (SELECT order_id from order_info WHERE member_id IN (SELECT member_id from member_info WHERE level_id = #{levelId})
	AND (STR_TO_DATE(create_time, '%Y-%m-%d') BETWEEN #{flowStartDate} AND #{flowStopDate})
	)
  </select>
  
  <select id="selectCustomerAnalysisSank" parameterType="java.util.Map" resultType="java.math.BigDecimal">
  	SELECT discount_amount from order_detail WHERE order_id IN(
	SELECT order_id from order_info WHERE store_id = #{storeId} AND member_id IS NULL AND (STR_TO_DATE(create_time, '%Y-%m-%d') BETWEEN  #{flowStartDate} AND #{flowStopDate}) 
	)
	AND order_type = 1 AND is_deleted = 0 AND is_update = 0 AND order_status = 3 
  </select>
  
  <select id="selectCustomerAnalysisProject" parameterType="java.util.Map" resultType="java.math.BigDecimal">
  SELECT 
	CASE od.off_type
	WHEN 1 THEN 
		SUM((SELECT cp.combo_performance_cal from combo_project cp WHERE cp.project_id = od.project_id AND 
		cp.combo_id = (SELECT mcp.combo_id from member_combo_project mcp WHERE mcp.detail_id = od.combo_id)))
	ELSE SUM(od.discount_amount)
	END AS discount_amount
	from order_detail od WHERE od.order_type = 1 AND od.is_deleted = 0 AND od.is_update = 0 AND od.order_status = 3 
	AND od.order_id IN 
	(SELECT order_id from order_info WHERE store_id = #{storeId} AND (STR_TO_DATE(create_time, '%Y-%m-%d') BETWEEN #{flolStartDate} AND #{flolStopDate}))
  </select>
  
  <select id="selectBusinessInclude" parameterType="java.util.Map" resultType="com.zefun.web.dto.BusinessAnalysisDto">
   SELECT 
	 SUM(IF((cash_amount+unionpay_amount+wechat_amount+alipay_amount+group_amount)>0,
		IF(od.order_type = 3, 
			(SELECT SUM(goods_counts*combo_performance_cal) from combo_goods WHERE combo_id = od.combo_id), 
			(cash_amount+unionpay_amount+wechat_amount+alipay_amount+group_amount))
		,0)) AS 'cashConsumption', 
	 SUM(IF(oi.card_amount>0,
		IF(od.order_type = 3, 
			(SELECT goods_counts*combo_performance_cal from combo_goods WHERE combo_id = od.combo_id), 
			oi.card_amount)
		,0)) AS 'cardConsumption',
	 SUM(IF(od.order_type = 3, 
		(SELECT cp.combo_performance_cal from combo_project cp WHERE cp.project_id = od.project_id AND cp.combo_id = (SELECT mcp.combo_id from member_combo_project mcp WHERE mcp.detail_id = od.combo_id) )
		,0)) AS 'comboDeductible'
	 from order_info oi , order_detail od
	 WHERE oi.store_id = #{storeId}
	 AND od.order_id = oi.order_id AND (oi.order_type = 1  OR oi.order_type = 2 OR oi.order_type = 3) AND oi.is_deleted = 0
	 AND (STR_TO_DATE(oi.create_time, '%Y-%m-%d') BETWEEN  #{startDate} AND #{stopDate}) AND (oi.order_status = 3 OR oi.order_status = 4)
  </select>
  
  <select id="selectBusinessConsumption" parameterType="java.util.Map" resultType="com.zefun.web.dto.BusinessAnalysisDto">
   SELECT 
	 SUM(IF(od.order_type = 1, (cash_amount+unionpay_amount+wechat_amount+alipay_amount+group_amount), 0)) AS 'projectConsumption',
	 SUM(IF((od.order_type = 3 OR od.order_type = 4 OR od.order_type = 5 OR od.order_type = 6 OR od.order_type = 8), 
	 (cash_amount+unionpay_amount+wechat_amount+alipay_amount+group_amount), 0)) AS 'cardComboConsumption',
	 SUM(IF(od.order_type = 2, (cash_amount+unionpay_amount+wechat_amount+alipay_amount+group_amount), 0)) AS 'goodsDeductible'
	 from order_info oi, order_detail od
	 WHERE oi.store_id = #{storeId}
	 AND od.order_id = oi.order_id AND oi.is_deleted = 0 AND (cash_amount+unionpay_amount+wechat_amount+alipay_amount+group_amount)>0
	 AND (STR_TO_DATE(oi.create_time, '%Y-%m-%d') BETWEEN  #{startDate} AND #{stopDate}) AND (oi.order_status = 3 OR oi.order_status = 4)
  </select>
  
  <select id="selectStoreExpenses" parameterType="java.util.Map" resultType="com.zefun.web.dto.BusinessAnalysisDto">
   SELECT
	 SUM(IF(business_type = '固定支出',flow_amount,0)) AS 'fixedCost', 
	 SUM(IF(business_type = '水电燃料费',flow_amount,0)) AS 'writerCost',
	 SUM(IF(business_type = '间接运营成本',flow_amount,0)) AS 'briefOperation',
	 SUM(IF(business_type = '人员费用',flow_amount,0)) AS 'staffCosts',
	 SUM(IF(business_type = '行政管理费用',flow_amount,0)) AS 'administration',
	 SUM(IF(business_type = '直接运营支出',flow_amount,0)) AS 'directCost'
   from store_flow WHERE store_id = #{storeId} AND (STR_TO_DATE(flow_time, '%Y-%m-%d') BETWEEN #{startDate} AND #{stopDate})
  </select>
  
  <select id="selectProjectAndGoodsCost" parameterType="java.util.Map" resultType="java.math.BigDecimal">
  SELECT SUM(IF(od.order_type=1,
                (SELECT pif.cost_price
                 from project_info pif
                 WHERE pif.project_id = od.project_id), 0))+
	       SUM(IF(od.order_type=2,
	                (SELECT gif.cost_price
	                 from goods_info gif
	                 WHERE gif.goods_id = od.project_id), 0))AS 'goodsCost'
	from order_detail od
	WHERE order_id IN
	    ( SELECT order_id
	     from order_info
	     WHERE order_status &gt; 2
	       AND is_deleted = 0
	       ANd store_id = #{storeId}
	       AND (STR_TO_DATE(create_time, '%Y-%m-%d') BETWEEN #{startDate} AND #{stopDate}) )
  </select>
  
  <select id="selectStoreExpensesDetails" parameterType="java.util.Map" resultType="com.zefun.web.dto.BusinessAnalysisDto">
  SELECT 
	business_project AS 'businessProject', SUM(flow_amount) AS 'flowAmount'
	from store_flow 
	WHERE business_type = #{codeName} 
	AND store_id = #{storeId}  AND (STR_TO_DATE(flow_time, '%Y-%m-%d') BETWEEN #{startDate} AND #{stopDate}) 
	GROUP BY business_project
  </select>
  
  <select id="selectStoreAssign" parameterType="java.util.Map" resultType="com.zefun.web.dto.BusinessAnalysisDto">
  SELECT 
	(
		 SELECT COUNT(1) from order_detail WHERE order_type = 1  AND order_id IN(
			SELECT order_id from order_info 
			WHERE store_id = #{storeId} AND is_deleted = 0 AND (order_status = 3 OR order_status = 4) 
			AND (STR_TO_DATE(create_time, '%Y-%m-%d') BETWEEN  #{startDate} AND #{stopDate}))
			AND detail_id IN (
			SELECT detail_id from shift_mahjong_project_step WHERE is_assign = 1 AND is_deleted = 0
	)
	)/
	(
	SELECT COUNT(1) from order_detail WHERE order_type = 1 AND order_id IN(
		SELECT order_id from order_info 
		WHERE store_id = #{storeId} AND is_deleted = 0 AND (order_status = 3 OR order_status = 4) 
		AND (STR_TO_DATE(create_time, '%Y-%m-%d') BETWEEN  #{startDate} AND #{stopDate})
	)
	) AS 'assignRatio' from DUAL
  </select>
  
  <select id="selectOrderCount" parameterType="java.util.Map" resultType="java.lang.Integer">
   SELECT COUNT(1) from order_info WHERE store_id = #{storeId} AND is_deleted = 0 AND (order_status = 3 OR order_status = 4) AND (STR_TO_DATE(create_time, '%Y-%m-%d') BETWEEN  #{startDate} AND #{stopDate})
  </select>
  
  
  <select id="getOpenOrderDateCode" parameterType="java.lang.String" resultType="java.lang.String">
   select cast(max(order_code) + 1 as char(12)) as orderCode from order_info where substring(create_time, 1, 10) = substring(#{openOrderDate}, 1, 10) 
  </select>
  <select id="getDeptSummary" parameterType="com.zefun.web.dto.SummaryResultDto"
  		resultMap="deptSummaryMap">
  SELECT dept_id,dept_name,#{begin} begin,#{end} end from dept_info WHERE store_id = #{storeId} AND is_results = 1  AND is_deleted = 0
  </select>	
  <select id="selectBusinessIncomePart" parameterType="java.util.HashMap"
  		resultType="com.zefun.web.dto.BusinessIncomePart">	
	SELECT
	dept_id,
	SUM(IF(order_type=1,real_price,0)) projectConsumedAmt,
	SUM(IF(order_type=2,real_price,0)) goodsConsumedAmt,
	SUM(IF(order_type=1 OR order_type=2,real_price,0)) AS totalAmt
	from
		order_detail
	WHERE
		order_id IN (
			SELECT
				order_id
			from
				order_info
			WHERE
				is_deleted = 0
			AND order_status IN (3, 4)
			and create_time <![CDATA[>=]]> #{begin} AND create_time <![CDATA[<]]> #{end}
		)
	AND dept_id = #{deptId}
  </select>
  <select id="selectChargedIncomePart" parameterType="java.util.HashMap"
  	resultType="com.zefun.web.dto.ChargedIncomePart">
	SELECT
	dept_id,
	SUM(IF(order_type=3,real_price,0)) comboAmt,
	SUM(IF(order_type=4,real_price,0)) openCardAmt,
	SUM(IF(order_type=5,real_price,0)) chargedAmt,
	SUM(IF(order_type=6,real_price,0)) upgradeAmt,
	SUM(IF(order_type=3 OR order_type=4 OR order_type=5 OR order_type=6,real_price,0)) AS totalAmt
	from
		order_detail
	WHERE
		order_id IN (
			SELECT
				order_id
			from
				order_info
			WHERE
				is_deleted = 0
			AND order_status IN (3, 4)
			AND create_time <![CDATA[>=]]> #{begin} AND create_time <![CDATA[<]]> #{end}
		)
	AND dept_id =#{deptId}	
  </select>
  <select id="selectBusinessDiscount" parameterType="java.util.HashMap"
  	resultType="com.zefun.web.dto.BusinessDiscountPart">
  	SELECT 
	SUM(IF(off_type=2,gift_amount,0)) couponAmt,
	SUM(IF(off_type=3,gift_amount,0)) giftAmt,
	SUM(IF(appoint_off!=0,appoint_off,0)) appointAmt,
	SUM(IF(off_type=2 OR off_type=3,gift_amount,0))+SUM(IF(appoint_off!=0,appoint_off,0)) AS totalAmt
	from
	order_detail od
	WHERE
	EXISTS 
	(
	SELECT 1 from order_info oi WHERE od.order_id = oi.order_id AND oi.is_deleted = 0 
	AND (oi.combo_amount>0 OR oi.coupon_amount>0 OR oi.gift_amount>0 OR oi.appoint_off>0)
	)
	AND od.dept_id = #{deptId} AND od.create_time <![CDATA[>=]]> #{begin} AND od.create_time <![CDATA[<]]> #{end}
  </select>
  
  <select id="selectCardConsumedAmt" parameterType="com.zefun.web.dto.SummaryResultDto"
  	resultType="java.math.BigDecimal">
  	SELECT 
	SUM(IFNULL(real_price,0)) _sum
	from
	order_detail od
	WHERE
	EXISTS 
	(
	SELECT 1 from order_info oi WHERE od.order_id = oi.order_id AND oi.is_deleted = 0 AND oi.card_amount > 0.00
	)
	AND dept_id = #{deptId}
	AND create_time <![CDATA[>=]]> #{begin} AND create_time <![CDATA[<]]> #{end}
	</select>
  	<select id="getBusinessCardConsumed" parameterType="com.zefun.web.dto.SummaryResultDto" resultType="com.zefun.web.dto.BusinessSummaryRelativeAmt">
  	SELECT  	
	SUM(IFNULL(real_price,0)) totalAmt
	<if test="dateType==3 || dateType==2">
	,SUBSTR(create_time,9,2) date
	</if>
	<if test="dateType==4">
	,SUBSTR(create_time,6,2) date
	</if>
	from
	order_detail od
	WHERE
	EXISTS 
	(
	SELECT 1 from order_info oi WHERE od.order_id = oi.order_id AND oi.is_deleted = 0 AND oi.card_amount > 0.00
	)
	AND store_id = #{storeId}
	AND create_time <![CDATA[>=]]> #{begin} AND create_time <![CDATA[<]]> #{end}
	<if test="dateType==3 || dateType==2">
	GROUP BY SUBSTR(create_time,1,10)
	</if>
	<if test="dateType==4">
	GROUP BY SUBSTR(create_time,1,7)
	</if>
  	</select>
  	<select id="getBusinessIncomes" parameterType="com.zefun.web.dto.SummaryResultDto"
  		resultType="com.zefun.web.dto.BusinessSummaryRelativeAmt">
  	SELECT
	SUM(IF(order_type=1 OR order_type=2 OR order_type=3 OR order_type=4 OR order_type=5 OR order_type=6,real_price,0)) AS totalAmt
	<if test="dateType==3 || dateType==2">
	,SUBSTR(create_time,9,2) date
	</if>
	<if test="dateType==4">
	,SUBSTR(create_time,6,2) date
	</if>
	from
		order_detail
	WHERE
		order_id IN (
			SELECT
				order_id
			from
				order_info
			WHERE
				is_deleted = 0
			AND order_status IN (3, 4)
			and create_time <![CDATA[>=]]> #{begin} AND create_time <![CDATA[<]]> #{end}
		)
	AND store_id = #{storeId}
	<if test="dateType==3 || dateType==2">
	GROUP BY SUBSTR(create_time,1,10)
	</if>
	<if test="dateType==4">
	GROUP BY SUBSTR(create_time,1,7)
	</if>
  	</select>
  	<select id="getBusinessExpense" parameterType="com.zefun.web.dto.SummaryResultDto" resultType="com.zefun.web.dto.BusinessSummaryRelativeAmt">
  	SELECT 
	SUM(IF(off_type=2 OR off_type=3,gift_amount,0))+SUM(IF(appoint_off!=0,appoint_off,0)) AS totalAmt
	<if test="dateType==3 || dateType==2">
	,SUBSTR(od.create_time,9,2) date
	</if>
	<if test="dateType==4">
	,SUBSTR(od.create_time,6,2) date
	</if>
	from
	order_detail od
	WHERE
	EXISTS 
	(
	SELECT 1 from order_info oi WHERE od.order_id = oi.order_id AND oi.is_deleted = 0 
	AND (oi.combo_amount>0 OR oi.coupon_amount>0 OR oi.gift_amount>0 OR oi.appoint_off>0)
	)
	AND od.store_id = #{storeId} AND od.create_time <![CDATA[>=]]> #{begin} AND od.create_time <![CDATA[<]]> #{end}
  	<if test="dateType==3 || dateType==2">
	GROUP BY SUBSTR(od.create_time,1,10)
	</if>
	<if test="dateType==4">
	GROUP BY SUBSTR(od.create_time,1,7)
	</if>
  	</select>
  	<select id="getDeptCashSummary" parameterType="com.zefun.web.dto.SummaryResultDto"
  		resultMap="cashMap">
  	SELECT dept_id,dept_name,#{begin} begin,#{end} end from dept_info WHERE store_id = #{storeId} AND is_results = 1 AND is_deleted = 0
  	</select>
  	<select id="selectCashIncomeByDept" parameterType="java.util.HashMap"
  		resultType="com.zefun.web.dto.DeptCashIncomeDto">
  	SELECT
	od.dept_id deptId,
	SUM(IF(od.order_type=1,od.real_price,0)) projectAmt,
	SUM(IF(od.order_type=2,od.real_price,0)) goodsAmt,
	SUM(IF(od.order_type=3,od.real_price,0)) comboAmt,
	SUM(IF(od.order_type=4,od.real_price,0)) openCardAmt,
	SUM(IF(od.order_type=5,od.real_price,0)) chargedAmt,
	SUM(IF(od.order_type=6,od.real_price,0)) upgradeAmt,
	SUM(IF(od.order_type=1 || od.order_type=2 || od.order_type=3 || od.order_type=4 || od.order_type=5 || od.order_type=6,od.real_price,0)) totalAmt
	from
		order_detail od JOIN order_info oi ON od.order_id = oi.order_id 
	WHERE
		EXISTS (
			SELECT
				1
			from
				order_info oi
			WHERE
				oi.is_deleted = 0
				AND oi.order_status IN (3,4)
				AND oi.create_time <![CDATA[>=]]> #{begin} AND oi.create_time <![CDATA[<]]> #{end}
			AND oi.cash_amount + oi.unionpay_amount + oi.wechat_amount + oi.alipay_amount + oi.group_amount + oi.debt_amount > 0
		)
		AND 
		oi.order_id IN
		(
			SELECT
			order_id	
			from
				order_info oi
			WHERE
				oi.is_deleted = 0
				AND oi.order_status IN (3,4)
				AND oi.create_time <![CDATA[>=]]> #{begin} AND oi.create_time <![CDATA[<]]> #{end}
			AND oi.cash_amount + oi.unionpay_amount + oi.wechat_amount + oi.alipay_amount + oi.group_amount + oi.debt_amount > 0
		
		
		)
	AND od.create_time <![CDATA[>=]]> #{begin} AND od.create_time <![CDATA[<]]> #{end} AND od.dept_id = #{deptId} AND od.is_deleted = 0
  	</select>
  	
  	<select id="getDeptCashTrendData" parameterType="com.zefun.web.dto.SummaryResultDto"
  		resultMap="cashTrendMap">
  	SELECT DISTINCT order_type,#{begin} begin,#{end} end,#{dateType} dateType,#{storeId} storeId from order_detail where order_type NOT IN (7,8)
  	</select>
  	<select id="selectCashTrend" parameterType="java.util.HashMap"
  		resultType="com.zefun.web.dto.DeptSummaryByDayDto">
  	SELECT
	SUM(IF(od.order_type=#{orderType},od.discount_amount,0)) deptSum
	<if test="dateType==3 || dateType==2">
	,SUBSTR(od.create_time,9,2) currDate
	</if>
	<if test="dateType==4">
	,SUBSTR(od.create_time,6,2) currDate
	</if>
	from
		order_detail od JOIN order_info oi ON od.order_id = oi.order_id 
	WHERE
		EXISTS (
			SELECT
				1
			from
				order_info oi
			WHERE
				oi.is_deleted = 0
				AND oi.order_status IN (3,4)
				AND oi.create_time <![CDATA[>=]]> #{begin} AND oi.create_time <![CDATA[<]]> #{end}
			AND oi.cash_amount + oi.unionpay_amount + oi.wechat_amount + oi.alipay_amount + oi.group_amount + oi.debt_amount > 0
		)
	AND od.create_time <![CDATA[>=]]> #{begin} AND od.create_time <![CDATA[<]]> #{end} AND od.store_id =#{storeId} AND od.is_deleted = 0
	<if test="dateType==3 || dateType==2">
	GROUP BY SUBSTR(od.create_time,1,10)
	</if>
	<if test="dateType==4">
	GROUP BY SUBSTR(od.create_time,1,7)
	</if>
  	</select>
  	<select id="selectComboDiscount" parameterType="java.util.HashMap"
  		resultType="java.math.BigDecimal">
	 SELECT
		SUM(IFNULL(combo_performance_cal,0)) comboAmt
	from
		combo_project cp ,
		(
			SELECT DISTINCT
				mcp.combo_id
			from
				member_combo_project mcp
			INNER JOIN order_detail od ON mcp.detail_id = od.combo_id
			WHERE
				od.off_type = 1
			AND od.create_time <![CDATA[>=]]> #{begin}
			AND od.create_time <![CDATA[<]]> #{end}
			AND od.is_deleted = 0
			AND od.dept_id = #{deptId}
		) tmb
	WHERE
	cp.combo_id = tmb.combo_id
  	</select>
  	<select id="getBusinessComboDiscount" parameterType="com.zefun.web.dto.SummaryResultDto"
  		resultType="com.zefun.web.dto.BusinessSummaryRelativeAmt">
  	SELECT
		SUM(IFNULL(combo_performance_cal,0)) comboAmt
		<if test="dateType==3 || dateType==2">
			,SUBSTR(tmb.create_time,9,2) date
		</if>
		<if test="dateType==4">
			,SUBSTR(tmb.create_time,6,2) date
		</if>
		
	from
		combo_project cp ,
		(
			SELECT DISTINCT
				mcp.combo_id,
				od.create_time
			from
				member_combo_project mcp
			INNER JOIN order_detail od ON mcp.detail_id = od.combo_id
			WHERE
				od.off_type = 1
			AND od.create_time <![CDATA[>=]]> #{begin}
			AND od.create_time <![CDATA[<]]> #{end}
			AND od.is_deleted = 0
			AND od.store_id = #{storeId}
			<if test="dateType==3 || dateType==2">
			GROUP BY SUBSTR(od.create_time,1,10)
			</if>
			<if test="dateType==4">
			GROUP BY SUBSTR(od.create_time,1,7)
			</if>
		) tmb
	WHERE
	cp.combo_id = tmb.combo_id
	<if test="dateType==3 || dateType==2">
			GROUP BY SUBSTR(tmb.create_time,1,10)
	</if>
	<if test="dateType==4">
			GROUP BY SUBSTR(tmb.create_time,1,7)
	</if>
  	</select>
  	
  <select id="selectIsUserHandOrderCode" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select
        hand_order_code as handOrderCode
    from order_info
    where store_id = #{storeId}
        and order_status = 1
        and is_deleted = 0
  </select>
  
  <select id="selectByHandOrderCodeOrder" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
        *
    from order_info
    where store_id = #{storeId}
        and hand_order_code = #{handOrderCode}
        and order_status = 1 
        and is_deleted = 0
  </select>
  
  <select id="selectByOptionEmployeeId" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
        *
    from order_info
    where is_order_option = 1
        and option_employee_id = #{optionEmployeeId} 
        and is_deleted = 0
  </select>
  
  <select id="selectOrderInfoCardMoneyByDate" parameterType="com.zefun.web.entity.OrderInfo" resultMap="BaseResultMap">
  	select * from order_info where store_id = #{storeId}
  	<if test="queryType == 1"> and DATE_FORMAT(create_time,'%Y') = #{createTime}</if>
  	<if test="queryType == 2"> and DATE_FORMAT(create_time,'%Y-%m') = #{createTime} </if>
  </select>
  
  <select id="selectOrderInfoCardMoneyInByDate" parameterType="com.zefun.web.entity.OrderInfo" resultMap="BaseResultMap">
  	select oi.* from order_info oi
  	left join order_detail od on od.order_id = oi.order_id
  	where oi.store_id = #{storeId} and od.order_type in (4,5,6,7,8) 
  	<if test="queryType == 1"> and DATE_FORMAT(oi.create_time,'%Y') = #{createTime}</if>
  	<if test="queryType == 2"> and DATE_FORMAT(oi.create_time,'%Y-%m') = #{createTime} </if>
  </select>
  
  <select id="selectOrderInfoBySummary" parameterType="java.util.Map" resultType ="com.zefun.web.dto.BusinessTotailDto">
   SELECT 
     create_time as createTime, cash_amount + unionpay_amount + wechat_amount + alipay_amount + group_amount + debt_amount as valueMoney
   FROM 
	 order_info 
   WHERE order_status  IN (3,4)    
   AND is_deleted =0 AND store_id = ${storeId} AND cash_card_type = 1
   <choose>
	  <when test="dateType == 1">
         AND left(create_time, 4) = '${time}'
	  </when>
	  <otherwise>
	     AND left(create_time, 7) = '${time}'
	  </otherwise>
   </choose> 
  </select>
</mapper>
