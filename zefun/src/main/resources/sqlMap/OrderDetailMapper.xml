<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.OrderDetailMapper" >
	
  <resultMap type="com.zefun.web.dto.MemberLevelInfo" id="cardBaseMap">
  	<id property="levelId" column="level_id"/>
  	<result property="levelName" column="level_name"/>
  	<result property="begin" column="begin"/>
  	<result property="end" column="end"/>
  	<result property="storeId" column="storeId"/>
  	<association property="memberIds" column="{levelId=level_id,storeId=storeId}" select="selectMembersByLevelId"></association>  	
  </resultMap>
  
  <resultMap type="com.zefun.web.dto.CardConsumedTrendData" id="cardTrendMap">
  	<id property="orderType" column="order_type"/>
  	<association property="trends" column="{orderType=order_type,begin=begin,end=end,storeId=storeId,dateType=dateType}" select="selectCardType2"></association>
  </resultMap>
	
  <resultMap id="BaseResultMap" type="com.zefun.web.entity.OrderDetail" >
    <id column="detail_id" property="detailId" jdbcType="INTEGER" />
    <result column="detail_code" property="detailCode" jdbcType="CHAR" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="is_appoint" property="isAppoint" jdbcType="INTEGER" />
    <result column="appoint_off" property="appointOff" jdbcType="DECIMAL" />
    <result column="is_assign" property="isAssign" jdbcType="INTEGER" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="project_price" property="projectPrice" jdbcType="DECIMAL" />
    <result column="project_count" property="projectCount" jdbcType="INTEGER" />
    <result column="project_image" property="projectImage" jdbcType="VARCHAR" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="real_price" property="realPrice" jdbcType="DECIMAL" />
    <result column="off_type" property="offType" jdbcType="INTEGER" />
    <result column="combo_id" property="comboId" jdbcType="INTEGER" />
    <result column="coupon_id" property="couponId" jdbcType="INTEGER" />
    <result column="gift_amount" property="giftAmount" jdbcType="DECIMAL" />
    <result column="detail_calculate" property="detailCalculate" jdbcType="DECIMAL" />
    <result column="free_amount" property="freeAmount" jdbcType="CHAR" />
    <result column="order_remark" property="orderRemark" jdbcType="VARCHAR" />
    <result column="free_employee_id" property="freeEmployeeId" jdbcType="INTEGER" />
    <result column="service_length" property="serviceLength" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    <result column="is_update" property="isUpdate" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="last_operator_id" property="lastOperatorId" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="DetailBaseDtoMap" type="com.zefun.web.dto.OrderDetailDto" >
    <id column="detail_id" property="detailId" jdbcType="INTEGER" />
    <result column="detail_code" property="detailCode" jdbcType="CHAR" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <result column="dept_name" property="deptName" jdbcType="INTEGER" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="is_appoint" property="isAppoint" jdbcType="INTEGER" />
    <result column="appoint_off" property="appointOff" jdbcType="DECIMAL" />
    <result column="is_assign" property="isAssign" jdbcType="INTEGER" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="project_price" property="projectPrice" jdbcType="DECIMAL" />
    <result column="project_count" property="projectCount" jdbcType="INTEGER" />
    <result column="project_image" property="projectImage" jdbcType="VARCHAR" />
    <result column="real_price" property="realPrice" jdbcType="DECIMAL" />
    <result column="detail_calculate" property="detailCalculate" jdbcType="DECIMAL" />
    <result column="off_type" property="offType" jdbcType="INTEGER" />
    <result column="gift_amount" property="giftAmount" jdbcType="DECIMAL" />
    <result column="free_amount" property="freeAmount" jdbcType="CHAR" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="combo_id" property="comboId" jdbcType="INTEGER" />
    <result column="coupon_id" property="couponId" jdbcType="INTEGER" />
    <result column="service_length" property="serviceLength" jdbcType="INTEGER" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="order_remark" property="orderRemark" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="is_update" property="isUpdate" jdbcType="INTEGER" />
    <association property="commissionList" column="detail_id" select="com.zefun.web.mapper.EmployeeCommissionMapper.selectByEmployee" />
    <association property="stepList" column="detail_id" select="com.zefun.web.mapper.ShiftMahjongProjectStepMapper.selectOrderStepListByDetailId" />
  </resultMap>
  
  <resultMap id="SumPriceDtoMap" type="com.zefun.web.dto.SumPriceDto" >
    <result column="sumprice" property="sumprice" jdbcType="DECIMAL" />
    <result column="pprice" property="pprice" jdbcType="DECIMAL" />
    <result column="mean" property="mean" jdbcType="DECIMAL" />
    <result column="ratio" property="ratio" jdbcType="INTEGER" />
    <result column="cprice" property="cprice" jdbcType="DECIMAL" />
    <result column="mpprice" property="mpprice" jdbcType="DECIMAL" />
    <result column="mmean" property="mmean" jdbcType="DECIMAL" />
    <result column="mratio" property="mratio" jdbcType="INTEGER" />
    <result column="mcprice" property="mcprice" jdbcType="DECIMAL" />
  </resultMap>
  
  <resultMap type="com.zefun.web.dto.TrendDeptDataDto" id="baseMap">
  	<result column="dept_id" property="deptId" jdbcType="INTEGER"/>
  	<association property="trendDeptData" column="{deptId=dept_id,dateType=dateType,begin=begin,end=end}" select="getSpecifyDateDeptSummary"></association>
  </resultMap>
  
  <sql id="Base_Column_List" >
    detail_id, detail_code, order_id, dept_id, order_type, is_appoint, appoint_off, is_assign, 
    project_id, project_name, project_price, project_count, project_image, discount_amount, 
    real_price, off_type, combo_id, coupon_id, gift_amount, free_amount, order_remark, free_employee_id,
    service_length, store_id, order_status, is_deleted, is_update, create_time, update_time, last_operator_id,detail_calculate
  </sql>
  
  
   <select id="selectDetailLByOrderId" parameterType="java.util.Map" resultMap="BaseResultMap">
   SELECT d.order_id,i.create_time ,SUM( d.project_count) as project_count ,SUM(d.detail_calculate) as detail_calculate FROM 
   order_info i LEFT JOIN  order_detail  d ON i.order_id= d.order_id 
   WHERE i.order_status  in (3,4)    AND d.order_type = 2 
   AND i.is_deleted =0 AND  d.is_deleted =0 
   AND i.store_id = ${storeId}        AND left(i.create_time,4) = "${time}"         GROUP BY d.order_id
  </select>
  
  
    <select id="selectDetailLByGoods" parameterType="java.util.Map" resultMap="BaseResultMap">
   SELECT 
   d.order_id,d.create_time ,SUM( d.project_count) AS project_count ,SUM(d.detail_calculate) AS detail_calculate FROM 
		order_detail  d LEFT JOIN  goods_info g  ON g.goods_id = d.project_id 
 						LEFT JOIN  order_info i  ON i.order_id = d.order_id    
	    WHERE i.order_status  IN (3,4)    AND d.order_type = 2  AND i.is_deleted =0 AND  d.is_deleted =0 
   AND i.store_id = ${storeId}   AND left(i.create_time,4) = "${time}"   AND g.goods_id = ${goodsId}    
     GROUP BY d.order_id
  </select>
  
  
   <select id="selectDetailLByCategory" parameterType="java.util.Map" resultMap="BaseResultMap">
   SELECT 
   d.order_id,d.create_time ,SUM( d.project_count) AS project_count ,SUM(d.detail_calculate) AS detail_calculate FROM 
		order_detail  d LEFT JOIN  goods_info     g ON g.goods_id    = d.project_id 
 						LEFT JOIN  order_info     i ON i.order_id    = d.order_id   
 						LEFT JOIN  goods_category c ON g.category_id = c.category_id 
	    WHERE i.order_status  IN (3,4)    AND d.order_type = 2  AND i.is_deleted =0 AND  d.is_deleted =0 
   AND i.store_id = ${storeId}   AND left(i.create_time,4) = "${time}"   AND g.category_id = ${categoryId}    
     GROUP BY d.order_id
  </select>
  
  <!-- 删除门店所有订单明细数据(清除测试数据)，by 张小胖 -->
  <delete id="deleteByStoreId" parameterType="java.lang.Integer">
  	delete from order_detail where store_id = #{storeId}
  </delete>
  
  <select id="selectDetailListByOrderId" parameterType="java.lang.Integer" resultMap="DetailBaseDtoMap">
    select 
    s.*
    ,(select dept_name from dept_info where dept_info.dept_id =s.dept_id) as dept_name
    from order_detail  s
    where s.order_id = #{orderId,jdbcType=INTEGER} and s.is_deleted = 0 and s.order_type &lt;&gt; 7
  </select>
  
  <select id="selectOrderId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_detail
    where order_id = #{orderId,jdbcType=INTEGER} and is_deleted = 0
  </select>
  
  <select id="selectUpdateByOrderId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select 
       detail_id as detailId
    from order_detail
    where order_id = #{orderId,jdbcType=INTEGER} and is_deleted = 0 and is_update = 1
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_detail
    where detail_id = #{detailId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByDetailBaseDto" resultMap="DetailBaseDtoMap" parameterType="java.lang.Integer" >
    select 
    s.*
    ,(select dept_name from dept_info where dept_info.dept_id =s.dept_id) as dept_name
    from order_detail  s
    where s.detail_id = #{detailId,jdbcType=INTEGER}

  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_detail
    where detail_id = #{detailId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.zefun.web.entity.OrderDetail" useGeneratedKeys = "true" keyProperty="detailId">
    insert into order_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="detailId != null" >
        detail_id,
      </if>
      <if test="detailCode != null" >
        detail_code,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="deptId != null" >
        dept_id,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="isAppoint != null" >
        is_appoint,
      </if>
      <if test="appointOff != null" >
        appoint_off,
      </if>
      <if test="isAssign != null" >
        is_assign,
      </if>
      <if test="projectId != null" >
        project_id,
      </if>
      <if test="projectName != null" >
        project_name,
      </if>
      <if test="projectPrice != null" >
        project_price,
      </if>
      <if test="projectCount != null" >
        project_count,
      </if>
      <if test="projectImage != null" >
        project_image,
      </if>
      <if test="discountAmount != null" >
        discount_amount,
      </if>
      <if test="realPrice != null" >
        real_price,
      </if>
      <if test="detailCalculate != null" >
        detail_calculate,
      </if>
      <if test="offType != null" >
        off_type,
      </if>
      <if test="comboId != null" >
        combo_id,
      </if>
      <if test="couponId != null" >
        coupon_id,
      </if>
      <if test="giftAmount != null" >
        gift_amount,
      </if>
      <if test="freeAmount != null" >
        free_amount,
      </if>
      <if test="orderRemark != null" >
        order_remark,
      </if>
      <if test="freeEmployeeId != null" >
        free_employee_id,
      </if>
      <if test="serviceLength != null" >
        service_length,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="isUpdate != null" >
        is_update,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="detailId != null" >
        #{detailId,jdbcType=INTEGER},
      </if>
      <if test="detailCode != null" >
        #{detailCode,jdbcType=CHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        #{deptId,jdbcType=INTEGER},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="isAppoint != null" >
        #{isAppoint,jdbcType=INTEGER},
      </if>
      <if test="appointOff != null" >
        #{appointOff,jdbcType=DECIMAL},
      </if>
      <if test="isAssign != null" >
        #{isAssign,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="projectName != null" >
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectPrice != null" >
        #{projectPrice,jdbcType=DECIMAL},
      </if>
      <if test="projectCount != null" >
        #{projectCount,jdbcType=INTEGER},
      </if>
      <if test="projectImage != null" >
        #{projectImage,jdbcType=VARCHAR},
      </if>
      <if test="discountAmount != null" >
        #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="realPrice != null" >
        #{realPrice,jdbcType=DECIMAL},
      </if>
      <if test="detailCalculate != null" >
        #{detailCalculate,jdbcType=DECIMAL},
      </if>
      <if test="offType != null" >
        #{offType,jdbcType=INTEGER},
      </if>
      <if test="comboId != null" >
        #{comboId,jdbcType=INTEGER},
      </if>
      <if test="couponId != null" >
        #{couponId,jdbcType=INTEGER},
      </if>
      <if test="giftAmount != null" >
        #{giftAmount,jdbcType=DECIMAL},
      </if>
      <if test="freeAmount != null" >
        #{freeAmount,jdbcType=CHAR},
      </if>
      <if test="orderRemark != null" >
        #{orderRemark,jdbcType=VARCHAR},
      </if>
      <if test="freeEmployeeId != null" >
        #{freeEmployeeId,jdbcType=INTEGER},
      </if>
      <if test="serviceLength != null" >
        #{serviceLength,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="isUpdate != null" >
        #{isUpdate,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=CHAR},
      </if>
      <if test="lastOperatorId != null" >
        #{lastOperatorId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.zefun.web.entity.OrderDetail" >
    update order_detail
    <set >
      <if test="detailCode != null" >
        detail_code = #{detailCode,jdbcType=CHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="deptId != null" >
        dept_id = #{deptId,jdbcType=INTEGER},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="isAppoint != null" >
        is_appoint = #{isAppoint,jdbcType=INTEGER},
      </if>
      <if test="appointOff != null" >
        appoint_off = #{appointOff,jdbcType=DECIMAL},
      </if>
      <if test="isAssign != null" >
        is_assign = #{isAssign,jdbcType=INTEGER},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="projectName != null" >
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectPrice != null" >
        project_price = #{projectPrice,jdbcType=DECIMAL},
      </if>
      <if test="projectCount != null" >
        project_count = #{projectCount,jdbcType=INTEGER},
      </if>
      <if test="projectImage != null" >
        project_image = #{projectImage,jdbcType=VARCHAR},
      </if>
      <if test="discountAmount != null" >
        discount_amount = #{discountAmount,jdbcType=DECIMAL},
      </if>
      <if test="realPrice != null" >
        real_price = #{realPrice,jdbcType=DECIMAL},
      </if>
      <if test="detailCalculate != null" >
        detail_calculate = #{detailCalculate,jdbcType=DECIMAL},
      </if>
      <if test="offType != null" >
        off_type = #{offType,jdbcType=INTEGER},
      </if>
      <if test="comboId != null" >
        combo_id = #{comboId,jdbcType=INTEGER},
      </if>
      <if test="couponId != null" >
        coupon_id = #{couponId,jdbcType=INTEGER},
      </if>
      <if test="giftAmount != null" >
        gift_amount = #{giftAmount,jdbcType=DECIMAL},
      </if>
      <if test="freeAmount != null" >
        free_amount = #{freeAmount,jdbcType=CHAR},
      </if>
      <if test="orderRemark != null" >
        order_remark = #{orderRemark,jdbcType=VARCHAR},
      </if>
      <if test="freeEmployeeId != null" >
        free_employee_id = #{freeEmployeeId,jdbcType=INTEGER},
      </if>
      <if test="serviceLength != null" >
        service_length = #{serviceLength,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="isUpdate != null" >
        is_update = #{isUpdate,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=CHAR},
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id = #{lastOperatorId,jdbcType=INTEGER},
      </if>
    </set>
    where detail_id = #{detailId,jdbcType=INTEGER}
  </update>
  
  <select id="selectByMEmployees" resultMap="SumPriceDtoMap" parameterType="java.util.Map" >
    select FORMAT(sum(a.real_price)/#{num,jdbcType=INTEGER},2) as mpprice,FORMAT(sum(a.real_price)/sum(a.project_count),2) as mmean, IFNULL(FORMAT((c.numcount/sum(a.project_count))*100,1),0) as mratio from order_detail a  
    inner join (select sum(b.project_count) as numcount from order_detail b where b.order_type = 1 and CAST(replace(b.create_time,'-','') as UNSIGNED) between #{beginTime,jdbcType=INTEGER} and #{endTime,jdbcType=INTEGER} and b.is_assign =1) c
    where a.order_type = 1 and CAST(replace(a.create_time,'-','') as UNSIGNED) between #{beginTime,jdbcType=INTEGER} and #{endTime,jdbcType=INTEGER}
  </select>
  
  <select id="selectByCEmployees" resultMap="SumPriceDtoMap" parameterType="java.util.Map" >
    select FORMAT(sum(a.real_price)/#{num,jdbcType=INTEGER},2) as mcprice from order_detail a  
    where a.order_type = 2 and CAST(replace(a.create_time,'-','') as UNSIGNED) between #{beginTime,jdbcType=INTEGER} and #{endTime,jdbcType=INTEGER}
  </select>
  
  <select id="selectBySumPriceEmployees" resultMap="SumPriceDtoMap" parameterType="java.util.Map" >
    select sum(real_price) as sumprice from order_detail 
    where is_deleted = 0 and order_type in (1,2) and CAST(replace(create_time,'-','') as UNSIGNED) between #{beginTime,jdbcType=INTEGER} and #{endTime,jdbcType=INTEGER}   
     <!-- <foreach item="list" index="index" collection="list" open="(" separator="," close=")">
        #{list}
     </foreach> 
    group by employee_id order by sumprice desc
    -->
  </select>
  
  <select id="selectByPPriceEmployees" resultMap="SumPriceDtoMap" parameterType="java.util.Map" >
    select sum(a.real_price) as pprice,FORMAT(sum(a.real_price)/sum(a.project_count),2) as mean, IFNULL(FORMAT((c.numcount/sum(a.project_count))*100,1),0) as ratio from order_detail a  
    inner join (select sum(b.project_count) as numcount from order_detail b where b.order_type = 1 and CAST(replace(b.create_time,'-','') as UNSIGNED) between #{beginTime,jdbcType=INTEGER} and #{endTime,jdbcType=INTEGER} and b.is_assign =1) c
    where a.order_type = 1 and CAST(replace(a.create_time,'-','') as UNSIGNED) between #{beginTime,jdbcType=INTEGER} and #{endTime,jdbcType=INTEGER}
    
  </select>
  
  <select id="selectByCPriceEmployees" resultMap="SumPriceDtoMap" parameterType="java.util.Map" >
    select sum(a.real_price) as cprice from order_detail a  
    where a.order_type = 2 and CAST(replace(a.create_time,'-','') as UNSIGNED) between #{beginTime,jdbcType=INTEGER} and #{endTime,jdbcType=INTEGER}
   
  </select>
  
  <select id="selectOrderDetail" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_detail
    where order_id = #{orderId,jdbcType=INTEGER} and is_deleted = 0
  </select>
  
  <update id="updateServiceLength" parameterType="java.lang.Integer" >
    update order_detail t, 
	    (select TIMESTAMPDIFF(MINUTE,a.begin_time, a.finish_time) as dateLong, a.detail_id as detailId from shift_mahjong_project_step a
		where  a.shift_mahjong_step_id = #{shiftMahjongStepId,jdbcType=INTEGER}) v 
	set t.service_length = t.service_length + v.dateLong
	where t.detail_id = v.detailId
  </update>

  <resultMap id="SelfCashierDetailMahjongMap" type="com.zefun.web.dto.SelfCashierDetailDto" >
    <id column="detail_id" property="detailId" jdbcType="INTEGER" />
    <result column="detail_code" property="detailCode" jdbcType="VARCHAR" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="project_count" property="projectCount" jdbcType="INTEGER" />
  </resultMap>

  <!-- 查询自助收银模块的概要订单详情信息 by luhwen 2015.10.21 18:00:00 -->
  <select id="selectSelfCashierDetailMahjong" parameterType="java.lang.Integer" resultMap="SelfCashierDetailMap">
  	select detail_id, detail_code, order_type, project_id, project_name, project_count order_status from order_detail where order_id = #{orderId} and is_deleted = 0
  </select>
  
  <resultMap id="SelfCashierDetailMap" type="com.zefun.web.dto.SelfCashierDetailDto" >
    <id column="detail_id" property="detailId" jdbcType="INTEGER" />
    <result column="detail_code" property="detailCode" jdbcType="VARCHAR" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="is_appoint" property="isAppoint" jdbcType="INTEGER" />
    <result column="appoint_off" property="appointOff" jdbcType="DECIMAL" />
    <result column="is_assign" property="isAssign" jdbcType="INTEGER" />
    <result column="project_id" property="projectId" jdbcType="INTEGER" />
    <result column="project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="project_price" property="projectPrice" jdbcType="DECIMAL" />
    <result column="project_count" property="projectCount" jdbcType="INTEGER" />
    <result column="project_image" property="projectImage" jdbcType="VARCHAR" />
    <result column="discount_amount" property="discountAmount" jdbcType="DECIMAL" />
    <result column="free_amount" property="freeAmount" jdbcType="DECIMAL" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="is_gift_cash" property="isGiftCash" jdbcType="INTEGER" />
    <result column="highest_discount" property="highestDiscount" jdbcType="INTEGER" />
    <result column="dept_id" property="deptId" jdbcType="INTEGER" />
    <association property="stepList" column="detail_id" select="com.zefun.web.mapper.ShiftMahjongProjectStepMapper.selectOrderStepListByDetailId" />
  </resultMap>

	<!-- 查询自助收银模块的概要订单详情信息 by luhwen 2015.10.21 18:00:00 -->
  <select id="selectSelfCashierDetail" parameterType="java.lang.Integer" resultMap="SelfCashierDetailMap">
  	select a.detail_id,
  		   a.detail_code,
  		   a.order_type,
  		   a.is_appoint,
  		   a.appoint_off,
  		   a.is_assign,
  		   a.project_id,
  		   a.project_name,
  		   a.project_price,
  		   a.project_count,
  		   a.project_image,
  		   a.discount_amount,
  		   a.free_amount,
  		   a.order_status,
  		   DATE_FORMAT(a.create_time,'%Y-%m-%d %H:%i') AS create_time,
  		   CASE a.order_type 
	           WHEN 1 THEN (SELECT ifnull(t.is_gift_cash,0) from project_info t WHERE t.project_id = a.project_id)
	           WHEN 2 THEN (SELECT ifnull(t.is_cash_deduction,0) from goods_info t WHERE t.goods_id = a.project_id) 
	           WHEN 3 THEN 0
	       END as is_gift_cash,
	       CASE a.order_type 
               WHEN 1 THEN (SELECT ifnull(t.highest_discount,0) from project_info t WHERE t.project_id = a.project_id)
               WHEN 2 THEN (SELECT ifnull(t.highest_discount,0) from goods_info t WHERE t.goods_id = a.project_id) 
               WHEN 3 THEN 0
           END as highest_discount,
	       CASE a.order_type 
               WHEN 1 THEN (SELECT t.dept_id from project_info t WHERE t.project_id = a.project_id)
               WHEN 2 THEN (SELECT t.dept_id from goods_info t WHERE t.goods_id = a.project_id) 
               WHEN 3 THEN (SELECT t.dept_id from combo_info t WHERE t.combo_id = a.project_id) 
           END as dept_id
  		from order_detail a where a.order_id = #{orderId} and a.is_deleted = 0 and a.is_update = 0
  </select>
  
  <!-- 查询该明细对应的订单中存在的未完成的项目明细 -->
  <select id="selectByNotOverOrderDetail" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from order_detail a 
    where 
          exists(select 1 from order_detail b where a.order_id = b.order_id and b.detail_id = #{detailId,jdbcType=INTEGER} and b.is_deleted = 0) 
          and a.is_deleted = 0 and a.order_type = 1 and a.order_status != 3
    
  </select>
  
  <!-- 查询该明细对应的订单中存在的未完成的项目明细 -->
  <select id="selectByNotOverByOrderId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select * from order_detail  
    where 
          order_id = #{orderId,jdbcType=INTEGER} AND is_deleted = 0 AND order_status != 3
  </select>
  
  <select id="selectOrderDetailNameByOrderId" parameterType="java.lang.Integer" resultType="java.lang.String">
  	select group_concat(project_name separator ',')
  	    from order_detail 
  	  where order_id = #{orderId,jdbcType=INTEGER}
  	    group by order_id
  </select>
  
  <select id="selectByOrderProjectPage" resultType = "com.zefun.web.dto.OrderProjectPageDto" parameterType="com.zefun.web.entity.Page">
    SELECT a.detail_id AS detailId, b.order_code orderCode, a.project_name projectName, a.discount_amount discountAmount, 
	IFNULL(a.real_price, 0) realPrice, a.create_time createTime, a.off_type offType, a.gift_amount AS privilegeMoney,
	(SELECT c.store_name FROM store_info c WHERE c.store_id = a.store_id AND c.store_status != 5) AS storeName
	from order_detail a
	LEFT JOIN order_info b ON a.order_id = b.order_id
	WHERE a.order_type = 1 AND a.is_deleted = 0 AND b.is_deleted = 0
	   AND b.member_id = #{params.memberId} 
	   ORDER BY a.create_time DESC
  </select>
  
  <select id="selectByOrderGoodsPage" resultType = "com.zefun.web.dto.OrderProjectPageDto" parameterType="com.zefun.web.entity.Page">
    SELECT a.detail_id AS detailId, b.order_code orderCode, a.project_name projectName,
    (SELECT CONCAT(d.employee_code, '  ', d.name) FROM employee_info d WHERE d.employee_id = a.last_operator_id AND d.is_deleted = 0) AS lastOperatorName, 
    a.discount_amount discountAmount, IFNULL(a.real_price, 0) realPrice, a.create_time createTime, a.off_type offType, a.gift_amount AS privilegeMoney,
	(SELECT c.store_name FROM store_info c WHERE c.store_id = a.store_id AND c.store_status != 5) AS storeName
	from order_detail a
	LEFT JOIN order_info b ON a.order_id = b.order_id
	WHERE a.order_type = 2 AND a.is_deleted = 0 AND b.is_deleted = 0  
	   AND b.member_id = #{params.memberId} 
	   ORDER BY a.create_time DESC
  </select>
  
  <select id="selectComboNameByDetailId" parameterType="java.lang.Integer" resultType="java.lang.String">
  	select a.combo_name comboName
  	    from combo_info a 
  	  where exists(select 1 from member_combo_project b where a.combo_id = b.combo_id and 
  	               exists (select 1 from order_detail c where c.detail_id = #{detailId,jdbcType=INTEGER} and c.combo_id = b.detail_id)) 
  </select>
  
  <select id="selectCouponNameByDetailId" parameterType="java.lang.Integer" resultType="java.util.Map">
  	select a.coupon_name couponName, a.coupon_price couponPrice from coupon_info a where a.coupon_id = 
    (select coupon_id from member_coupon where relevance_id = (select coupon_id from order_detail where detail_id = #{detailId}))
  </select>
  
  <select id="selectHasProjectAndStatus" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_detail a
    where a.project_id = #{projectId,jdbcType=INTEGER} and a.is_deleted = 0 
    and exists(
               select 
                  1 
               from order_info b 
               where a.order_id = b.order_id 
               and b.order_status in (1, 2, 5) 
               and b.is_deleted = 0
              )
  </select>
  
  <select id="selectTataiRealPriceByType" parameterType="java.util.Map" resultType="java.math.BigDecimal">
     select ifnull(sum(a.real_price), 0) from order_detail a 
     where exists(select 1 from order_info b 
				  where a.order_id = b.order_id and b.is_deleted = 0 and b.order_status > 2
				  and (b.debt_amount > 0 || b.cash_amount > 0 || b.unionpay_amount > 0 || b.wechat_amount > 0 || b.alipay_amount > 0 || b.group_amount > 0)
				 )
	 and a.store_id = #{storeId,jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} 
	 and substring(a.create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR} and a.is_deleted = 0 
	 <choose>
		<when test="orType == 1">
	       and a.order_type = 1 
		</when>
		<when test="orType == 2">
		   and a.order_type = 2 
		</when>
		<when test="orType == 3">
		   and a.order_type = 3 
		</when>
		<when test="orType == 4">
		   and a.order_type in (4, 5, 6) 
		</when>
	 </choose>
	 <if test="deptId != -1" >
        and a.dept_id = #{deptId,jdbcType=INTEGER}
     </if>
  </select>
  
  <select id="selectTataiCardByType" parameterType="java.util.Map" resultType="java.math.BigDecimal">
     select ifnull(sum(a.real_price), 0) from order_detail a 
     where exists(select 1 from order_info b 
				  where a.order_id = b.order_id 
				  and b.card_amount > 0 and b.is_deleted = 0 and b.order_status > 2
				 )
	 and a.store_id = #{storeId,jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} 
	 and substring(a.create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR} and a.is_deleted = 0 
	 <choose>
		<when test="orType == 1">
	       and a.order_type = 1 
		</when>
		<when test="orType == 2">
		   and a.order_type = 2 
		</when>
		<when test="orType == 3">
		   and a.order_type = 3 
		</when>
	 </choose>
	 <if test="deptId != -1" >
        and a.dept_id = #{deptId,jdbcType=INTEGER}
     </if>
  </select>
  
  <select id="selectTataiAmountProject" parameterType="java.util.Map" resultType="java.math.BigDecimal">
     select ifnull(sum(a.real_price), 0) from order_detail a 
     where exists(select 1 from order_info b 
				  where a.order_id = b.order_id and b.is_deleted = 0 and b.order_status > 2 
				  <choose>
					<when test="amountType == 1">
				       and b.card_amount > 0 
					</when>
					<otherwise>
					   and (b.debt_amount > 0 || b.cash_amount > 0 || b.unionpay_amount > 0 || b.wechat_amount > 0 || b.alipay_amount > 0 || b.group_amount > 0)
					</otherwise>
				 </choose>
				 )
	 and a.store_id = #{storeId,jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} 
	 and substring(a.create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR} and a.is_deleted = 0 
	 <choose>
		<when test="orderType == 1">
	       and a.order_type = 1 and exists(select 1 from project_info c where a.project_id = c.project_id and c.category_id = #{categoryId, jdbcType=INTEGER}) 
		</when>
		<when test="orderType == 2">
	       and a.order_type = 2 and exists(select 1 from goods_info c where a.project_id = c.goods_id and c.category_id = #{categoryId, jdbcType=INTEGER}) 
		</when>
		<when test="orderType == 3">
		   and a.order_type = 3 and exists(select 1 from combo_info c where a.project_id = c.combo_id and c.is_deleted = 0 and c.is_count_limit = #{isCountLimit, jdbcType=INTEGER})
		</when>
	 </choose>
	 <if test="deptId != -1" >
        and a.dept_id = #{deptId,jdbcType=INTEGER}
     </if>
  </select>
  
  <select id="selectTataiAmountUseComboProject" parameterType="java.util.Map" resultType="java.math.BigDecimal">
     select ifnull(sum(d.combo_performance_cal), 0) from order_detail a, member_combo_project c, combo_project d 
     where exists(select 1 from order_info b 
				  where a.order_id = b.order_id and b.is_deleted = 0 and b.order_status > 2)
	 and a.store_id = #{storeId,jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} 
	 and substring(a.create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR} and a.is_deleted = 0 
	 and a.off_type = 1 and a.combo_id = c.detail_id and d.combo_id = c.combo_id and d.project_id = c.project_id
     and a.order_type = 1 and exists(select 1 from project_info c where a.project_id = c.project_id and c.category_id = #{categoryId, jdbcType=INTEGER}) 
	 <if test="deptId != -1" >
        and a.dept_id = #{deptId,jdbcType=INTEGER}
     </if>
  </select>
  
  <select id="selectTataiAmountUseComboGoods" parameterType="java.util.Map" resultType="java.math.BigDecimal">
     select ifnull(sum(d.combo_performance_cal * d.goods_counts), 0) from order_detail a, combo_goods d 
     where exists(select 1 from order_info b 
				  where a.order_id = b.order_id and b.is_deleted = 0 and b.order_status > 2
				  <choose>
					<when test="amountType == 1">
				       and b.card_amount > 0 
					</when>
					<otherwise>
					   and (b.debt_amount > 0 || b.cash_amount > 0 || b.unionpay_amount > 0 || b.wechat_amount > 0 || b.alipay_amount > 0 || b.group_amount > 0)
					</otherwise>
				 </choose>)
	 and a.store_id = #{storeId,jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} 
	 and substring(a.create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR} and a.is_deleted = 0 
	 and a.project_id = d.combo_id and d.is_deleted = 0
     and a.order_type = 3 and exists(select 1 from goods_info c where d.goods_id = c.goods_id and c.category_id = #{categoryId, jdbcType=INTEGER}) 
	 <if test="deptId != -1" >
        and a.dept_id = #{deptId,jdbcType=INTEGER}
     </if>
  </select>
  
  <select id="selectTataiProjectSizeType" parameterType="java.util.Map" resultType="java.math.BigDecimal">
     select ifnull(sum(a.real_price), 0) from order_detail a 
     where a.store_id = #{storeId,jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} 
	 and substring(a.create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR} and a.order_type = 1 and a.is_deleted = 0 
	 and exists(select 1 from order_info b where a.order_id = b.order_id and b.is_deleted = 0 and b.order_status > 2)
	 and exists(select 1 from project_info c where a.project_id = c.project_id and c.project_type = #{projectType, jdbcType=INTEGER})
	 <if test="deptId != -1" >
        and a.dept_id = #{deptId,jdbcType=INTEGER}
     </if>
  </select>
  
  <select id="selectTataiUseComboProjectSizeType" parameterType="java.util.Map" resultType="java.math.BigDecimal">
     select ifnull(sum(d.combo_performance_cal), 0) from order_detail a, member_combo_project c, combo_project d 
     where a.store_id = #{storeId,jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} 
	 and substring(a.create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR} and a.order_type = 1 and a.is_deleted = 0 
	 and a.off_type = 1 and a.combo_id = c.detail_id and d.combo_id = c.combo_id and d.project_id = c.project_id
	 and exists(select 1 from order_info b where a.order_id = b.order_id and b.is_deleted = 0 and b.order_status > 2)
	 and exists(select 1 from project_info c where a.project_id = c.project_id and c.project_type = #{projectType, jdbcType=INTEGER})
	 <if test="deptId != -1" >
        and a.dept_id = #{deptId,jdbcType=INTEGER}
     </if>
  </select>
  
  <select id="selectTataiProjectAmountType" parameterType="java.util.Map" resultType="java.math.BigDecimal">
     select ifnull(sum(a.real_price), 0) from order_detail a 
     where exists(select 1 from order_info b 
				  where a.order_id = b.order_id and b.is_deleted = 0 and b.order_status > 2
				  <choose>
					<when test="caType == 1">
				       and b.card_amount > 0 
					</when>
					<otherwise>
					   and (b.debt_amount > 0 || b.cash_amount > 0 || b.unionpay_amount > 0 || b.wechat_amount > 0 || b.alipay_amount > 0 || b.group_amount > 0)
					</otherwise>
				 </choose>
				 )
     and a.store_id = #{storeId,jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} 
	 and substring(a.create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR} and a.order_type = 1 and a.is_deleted = 0
	 <if test="deptId != -1" >
        and a.dept_id = #{deptId,jdbcType=INTEGER}
     </if>
  </select>
  
  <select id="selectTataiUseComboProjectAmountType" parameterType="java.util.Map" resultType="java.math.BigDecimal">
     select ifnull(sum(d.combo_performance_cal), 0) from order_detail a, member_combo_project c, combo_project d 
     where exists(select 1 from order_info b 
				  where a.order_id = b.order_id and b.is_deleted = 0 and b.order_status > 2)
     and a.store_id = #{storeId,jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} 
     and a.off_type = 1 and a.combo_id = c.detail_id and d.combo_id = c.combo_id and d.project_id = c.project_id
	 and substring(a.create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR} and a.order_type = 1 and a.is_deleted = 0
	 <if test="deptId != -1" >
        and a.dept_id = #{deptId,jdbcType=INTEGER}
     </if>
  </select>
  
  <select id="selectTataiProject" parameterType="java.util.Map" resultType="java.math.BigDecimal">
     select ifnull(sum(a.real_price), 0) from order_detail a 
     where a.store_id = #{storeId,jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} 
	 and substring(a.create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR} and a.order_type = #{orderType,jdbcType=INTEGER} and a.is_deleted = 0 
	 and exists(select 1 from order_info b where a.order_id = b.order_id and b.is_deleted = 0 and b.order_status > 2)
	 <if test="deptId != -1" >
        and a.dept_id = #{deptId,jdbcType=INTEGER}
     </if>
  </select>
  
  <select id="selectTataiProjectUseCombo" parameterType="java.util.Map" resultType="java.math.BigDecimal">
     select ifnull(sum(d.combo_performance_cal), 0) from order_detail a, member_combo_project c, combo_project d 
     where a.store_id = #{storeId,jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} 
	 and substring(a.create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR} and a.order_type = 1 and a.is_deleted = 0 
	 and a.off_type = 1 and a.combo_id = c.detail_id and d.combo_id = c.combo_id and d.project_id = c.project_id
	 and exists(select 1 from order_info b where a.order_id = b.order_id and b.is_deleted = 0 and b.order_status > 2)
	 <if test="deptId != -1" >
        and a.dept_id = #{deptId,jdbcType=INTEGER}
     </if>
  </select>
  
  <select id="selectTataiProjectUseComboGoods" parameterType="java.util.Map" resultType="java.math.BigDecimal">
     select ifnull(sum(c.combo_performance_cal * c.goods_counts), 0) from order_detail a, combo_goods c
     where a.store_id = #{storeId,jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} 
	 and substring(a.create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR} and a.is_deleted = 0 
	 and a.order_type = 3 and a.project_id = c.combo_id 
	 and exists(select 1 from order_info b where a.order_id = b.order_id and b.is_deleted = 0 and b.order_status > 2)
	 <if test="deptId != -1" >
        and a.dept_id = #{deptId,jdbcType=INTEGER}
     </if>
  </select>
  
  <select id="selectBuyComboTime" parameterType="java.util.Map" resultType="java.lang.Integer">
     select count(*) as comboTime from order_detail a 
     where a.store_id = #{storeId,jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} 
	 and substring(a.create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR} and a.order_type = #{orderType,jdbcType=INTEGER} and a.is_deleted = 0 
	 and exists(select 1 from order_info b where a.order_id = b.order_id and b.is_deleted = 0 and b.order_status > 2)
	 and a.project_id = #{comboId,jdbcType=INTEGER}
  </select>
  
  <select id="selectBuyGoodsTime" parameterType="java.util.Map" resultType="java.lang.Integer">
     select count(*) as goodsTime from order_detail a 
     where a.store_id = #{storeId,jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} 
	 and substring(a.create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR} and a.order_type = 2 and a.is_deleted = 0 
	 and exists(select 1 from order_info b where a.order_id = b.order_id and b.is_deleted = 0 and b.order_status > 2)
	 and exists(select 1 from goods_info c where c.category_id = #{categoryId,jdbcType=INTEGER} and a.project_id = c.goods_id and c.is_deleted = 0) 
  </select>
  
  <select id="selectBuyGoodsComboTime" parameterType="java.util.Map" resultType="java.lang.Integer">
     select ifnull(sum(d.goods_counts), 0) as goodsTime from order_detail a, combo_goods d
     where a.store_id = #{storeId,jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} 
	 and substring(a.create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR} and a.order_type = 3 and a.is_deleted = 0 
	 and a.project_id = d.combo_id 
	 and exists(select 1 from order_info b where a.order_id = b.order_id and b.is_deleted = 0 and b.order_status > 2)
	 and exists(select 1 from goods_info c where c.category_id = #{categoryId,jdbcType=INTEGER} and d.goods_id = c.goods_id and c.is_deleted = 0) 
  </select>

  <select id="getTrendData" parameterType="com.zefun.web.dto.SummaryResultDto"
  	resultMap="baseMap">
  	SELECT dept_id,#{dateType} dateType,#{begin} begin, #{end} end from dept_info WHERE store_id =#{storeId} AND is_results = 1 AND is_deleted = 0
  </select>
  
  <select id="getSpecifyDateDeptSummary" parameterType="java.util.HashMap"
  	resultType="com.zefun.web.dto.DeptSummaryByDayDto">
	SELECT
	SUM(IFNULL(real_price,0)) deptSum
	<if test="dateType==3">
	,SUBSTR(create_time,9,2) currDate
	</if>
	<if test="dateType==4">
	,SUBSTR(create_time,6,2) currDate
	</if>
	from
	order_detail
	WHERE	
	dept_id= #{deptId}
	AND order_type = 1
	AND is_deleted= 0 
	AND create_time <![CDATA[>=]]> #{begin} AND create_time <![CDATA[<]]> #{end} 
	<if test="dateType==3 || dateType==4">
	GROUP BY currDate	
	</if>	
  </select>
  
  <select id="selectConsumeTime" parameterType="java.util.Map" resultType="java.lang.Integer">
     select 
        count(*) 
     from order_detail a 
     where a.store_id = #{storeId,jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} 
	 and substring(a.create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR} and a.off_type = 1 and a.order_type = 1
	 and exists(
                  select 1 from member_combo_project b 
                  where a.combo_id = b.detail_id 
                  and b.combo_id = #{comboId,jdbcType=INTEGER} 
                  and b.project_id = #{projectId,jdbcType=INTEGER}
                ) and a.is_deleted = 0
     and exists(select 1 from order_info c where a.order_id = c.order_id and c.is_deleted = 0 and c.order_status > 2)
  </select>
  
  <!-- 查询年季月疗程信用次数 -->
  <select id="selectComboStatementTime" parameterType="java.util.Map" resultType="java.lang.Integer">
     select 
        count(*) 
     from order_detail a 
     where a.store_id = #{storeId,jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay,jdbcType=CHAR} 
	 and substring(a.create_time, 1, 10) &lt;= #{endDay,jdbcType=CHAR} and a.off_type = 1 and a.order_type = 1
	 and exists(
                  select 1 from member_combo_project b 
                  where a.combo_id = b.detail_id 
                  and b.combo_id = #{comboId,jdbcType=INTEGER} 
                ) and a.is_deleted = 0
     and exists(select 1 from order_info c where a.order_id = c.order_id and c.is_deleted = 0 and c.order_status > 2)
  </select>
  
  <select id="selectRankingGoodsCount" parameterType="java.util.Map" resultType="java.util.Map">
     select goodsId, goodsName, sum(goodsRealPrice) as goodsRealPrice, sum(goodsCount) as goodsCount from (
	     select 
	        a.project_id as goodsId, a.project_name as goodsName, ifnull(sum(a.real_price), 0) as goodsRealPrice, count(*) as goodsCount
	     from order_detail a 
	     where a.order_type = 2 and a.is_deleted = 0 
	     and substring(a.create_time, 1, 10) &gt;= #{beginDay, jdbcType=CHAR} 
		 and substring(a.create_time, 1, 10) &lt;= #{endDay, jdbcType=CHAR} 
		 and a.store_id = #{storeId, jdbcType=INTEGER}
		 and exists(select 1 from order_info b 
				  where a.order_id = b.order_id and b.is_deleted = 0 and b.order_status > 2)
		 <if test="deptId != -1" >
	        and a.dept_id = #{deptId, jdbcType=INTEGER}
	     </if>
	     
	     union
	 
		 select d.goods_id as goodsId, d.goods_name as goodsName, ifnull(d.combo_performance_cal * d.goods_counts, 0) as goodsRealPrice, d.goods_counts as goodsCount from order_detail a, combo_goods d 
		 where a.store_id = #{storeId, jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay, jdbcType=CHAR} 
		 and substring(a.create_time, 1, 10) &lt;= #{endDay, jdbcType=CHAR} and a.order_type = 3 and a.is_deleted = 0 
		 and a.project_id = d.combo_id 
		 and exists(select 1 from order_info b 
					  where a.order_id = b.order_id and b.is_deleted = 0 and b.order_status > 2)
		 <if test="deptId != -1" >
	        and a.dept_id = #{deptId, jdbcType=INTEGER}
	     </if>
	) f
	group by goodsId, goodsName 
	 <choose>
		<when test="sortType == 1">
	       order by goodsRealPrice desc
		</when>
		<otherwise>
		   order by goodsCount desc
		</otherwise>
	 </choose>
	 limit 0,5
  </select>
  
  <select id="selectComboTatailTime" parameterType="java.util.Map" resultType="java.util.Map">
     select (select 
        count(*) 
     from order_detail a 
     where a.store_id = #{storeId, jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay, jdbcType=CHAR} and a.order_type = 3 
	  and exists(select 1 from order_info c where a.order_id = c.order_id and c.is_deleted = 0 and c.order_status > 2)
	  and substring(a.create_time, 1, 10) &lt;= #{endDay, jdbcType=CHAR} and exists(
                  select 1 from combo_info b 
                  where b.combo_id = a.project_id 
                  and b.is_count_limit = 1) and a.is_deleted = 0
                  <if test="deptId != -1" >
			        and a.dept_id = #{deptId, jdbcType=INTEGER}
			     </if>) as seriesComboTatailTime,
     (select 
        count(*) 
     from order_detail a 
     where a.store_id = #{storeId, jdbcType=INTEGER} and substring(a.create_time, 1, 10) &gt;= #{beginDay, jdbcType=CHAR} and a.order_type = 3 
	  and exists(select 1 from order_info c where a.order_id = c.order_id and c.is_deleted = 0 and c.order_status > 2)
	  and substring(a.create_time, 1, 10) &lt;= #{endDay, jdbcType=CHAR} and exists(
                  select 1 from combo_info b 
                  where b.combo_id = a.project_id 
                  and b.is_count_limit = 0) and a.is_deleted = 0
                  <if test="deptId != -1" >
			        and a.dept_id = #{deptId, jdbcType=INTEGER}
			     </if>) as timeComboTatailTime from dual
  </select>
  <select id="getMemberInfo" parameterType="com.zefun.web.dto.SummaryResultDto"
  	resultMap="cardBaseMap">
  SELECT level_id,level_name,#{begin} begin,#{end} end,#{storeId} storeId  from member_level WHERE store_id = #{hpStoreId} AND is_deleted  =0
  </select>
  <select id="selectMembersByLevelId" parameterType="java.util.HashMap" resultType="java.lang.Integer">
  SELECT member_id from member_info WHERE level_id = #{levelId} AND is_deleted = 0 AND store_id= #{storeId}
  </select>
  <select id="getMemberType2Info" parameterType="com.zefun.web.dto.MemberLevelInfo"
  		resultType="com.zefun.web.dto.Member2Info">
	SELECT
	 SUM(IF(od.order_type=4,od.real_price,0)) newOpenAmt,
	 SUM(IF(od.order_type=5,od.real_price,0)) chargeCardAmt,
	 SUM(IF(od.order_type=6,od.real_price,0)) upgradeAmt,
	 COUNT(IF(od.order_type=4,TRUE,NULL)) openCnt,
 	 COUNT(IF(od.order_type=5,TRUE,NULL)) chargeCnt,
 	 COUNT(IF(od.order_type=6,TRUE,NULL)) upgradeCnt
	from
	order_detail od JOIN order_info oi ON od.order_id = oi.order_id
	WHERE
	oi.order_type = 2 AND oi.is_deleted = 0 AND od.store_id = #{storeId} AND oi.create_time <![CDATA[>=]]> #{begin} AND oi.create_time <![CDATA[<]]> #{end}
	AND oi.member_id in
	<foreach collection="memberIds" open="(" close=")" separator="," item="memberId">
		#{memberId}
	</foreach>
  </select>
  <select id="getMemberAccountInfo" parameterType="com.zefun.web.dto.MemberLevelInfo"
  		resultType="com.zefun.web.dto.MemberAccountInfo">
	SELECT
	 SUM(total_amount) accumulativeAmt,
	 SUM(balance_amount) balanceAmt,
	 COUNT(account_id) memberCnt
	from
	member_account 
	WHERE 
  	account_id IN
  	<foreach collection="memberIds" open="(" close=")" separator="," item="memberId">
		#{memberId}
	</foreach>
  </select>
  <select id="getMemberCardConsumedValue" parameterType="com.zefun.web.dto.MemberLevelInfo"
  		resultType="com.zefun.web.dto.MemberCardConsumedInfo">
  	SELECT 
	SUM(real_amount) cardAmt,
	COUNT(member_id) memberCnt
	from
	order_info
	WHERE
	create_time <![CDATA[>=]]> #{begin} AND create_time <![CDATA[<]]> #{end} AND is_deleted =0 AND store_id = #{storeId} AND card_amount > 0
	AND member_id IN 
	<foreach collection="memberIds" open="(" close=")" separator="," item="memberId">
		#{memberId}
	</foreach>
  </select>
  <select id="getDatePeriodCardSummary" parameterType="com.zefun.web.dto.SummaryResultDto"
  	resultType="com.zefun.web.dto.Member2Info">
  SELECT
	 SUM(IF(order_type=4,real_price,0)) newOpenAmt,
	 SUM(IF(order_type=5,real_price,0)) chargeCardAmt,
	 SUM(IF(order_type=6,real_price,0)) upgradeAmt	
	from
		order_detail
	WHERE
		order_id IN (
			SELECT
				order_id
			from
				order_info
			WHERE
				order_type = 2
			AND is_deleted = 0
			AND store_id = #{storeId}
			AND create_time <![CDATA[>=]]> #{begin}
			AND create_time <![CDATA[<]]>  #{end}
		)
  </select>
  <select id="getCardType2Trend" parameterType="com.zefun.web.dto.SummaryResultDto"
  	resultMap="cardTrendMap">
  SELECT DISTINCT order_type,#{begin} begin,#{end} end,#{storeId} storeId,#{dateType} dateType from order_detail WHERE order_type IN (4,5,6)
  </select>
  <select id="selectCardType2" parameterType="java.util.HashMap"
  	resultType="com.zefun.web.dto.DeptSummaryByDayDto">
  	SELECT
	SUM(od.real_price) deptSum
	<if test="dateType==3 || dateType==2">
	,SUBSTR(od.create_time,9,2) currDate
	</if>
	<if test="dateType==4">
	,SUBSTR(od.create_time,6,2) currDate
	</if>
	from
	order_detail od JOIN order_info oi ON od.order_id = oi.order_id
	WHERE
	oi.order_type = 2 AND oi.is_deleted = 0 AND od.store_id = #{storeId} AND oi.create_time <![CDATA[>=]]> #{begin} AND oi.create_time <![CDATA[<]]> #{end}
	AND od.order_type = #{orderType}
	GROUP BY 
	<if test="dateType==3 || dateType==2">
	SUBSTR(od.create_time,1,10)
	</if>
	<if test="dateType==4">
	SUBSTR(od.create_time,1,7)
	</if>
  </select>
  <select id="getCardConsumedTrend" parameterType="com.zefun.web.dto.SummaryResultDto"
  	resultType="com.zefun.web.dto.DeptSummaryByDayDto">
  	SELECT
	SUM(real_amount) deptSum
	<if test="dateType==3 || dateType==2">
	,SUBSTR(create_time,9,2) currDate
	</if>
	<if test="dateType==4">
	,SUBSTR(create_time,6,2) currDate
	</if>
	from
	order_info
	WHERE
	card_amount >0 
	AND
	create_time <![CDATA[>=]]> #{begin} AND create_time <![CDATA[<]]> #{end}  AND store_id =#{storeId } AND is_deleted = 0
	GROUP BY 
	<if test="dateType==3 || dateType==2">
	SUBSTR(create_time,1,10)
	</if>
	<if test="dateType==4">
	SUBSTR(create_time,1,7)
	</if>
  </select>
  
  <!-- 查询会员对应所有未结账的订单明细 -->
  <select id="selectIsNotOverOrderDetail" parameterType="java.lang.Integer" resultType="java.util.Map">
  	  select a.detail_id as detailId, a.project_id as projectId, a.order_type as orderType, b.store_id as storeId from order_detail a 
  	  left join order_info b on a.order_id = b.order_id 
  	  where b.is_deleted = 0 and b.member_id =#{memberId,jdbcType=INTEGER} and b.order_status in (1, 2)
  	  and a.is_deleted = 0 and a.order_type in (1, 2)
  </select>
  
  <insert id="insertMemberComboRecord" parameterType="java.util.Map" useGeneratedKeys = "true" keyProperty="recordId">
  	insert into member_combo_record
		(member_id, combo_id, store_id, detail_id, combo_name, combo_price, combo_image, project_amount, 
	    	project_count, remaining_count, overdue_time, create_time, update_time, last_operator_id)
	  select #{memberId,jdbcType=INTEGER}, combo_id, store_id, #{detailId,jdbcType=INTEGER},
	  	combo_name, a.combo_sale_price, combo_image, project_amount,
		project_count, project_count, case when a.valid_date != null then DATE_ADD(sysdate(),INTERVAL a.valid_date DAY) else '永久' end, 
		sysdate(), sysdate(), #{employeeId,jdbcType=INTEGER}
	 from combo_info a
	 	where combo_id = #{comboId,jdbcType=INTEGER}
  </insert>
  
  <insert id="insertMemberComboProject" parameterType="java.util.Map" useGeneratedKeys = "true" keyProperty="recordId">
  	insert into member_combo_project
		(record_id, combo_id, project_id, project_name, project_price, project_image, project_count, 
		    remaining_count, create_time, update_time, last_operator_id)
	  select #{recordId,jdbcType=INTEGER}, combo_id, project_id, project_name, project_price, project_image, project_count,
			project_count, sysdate(), sysdate(), #{employeeId,jdbcType=INTEGER}
		from combo_project
			where combo_id = #{comboId,jdbcType=INTEGER}
  </insert>
  
  <!-- 根据步骤标识查询对应订单标识 -->
  <select id="selectOrderIdByStep" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  	   select a.order_id as orderId from order_detail a 
  	   where exists(
  	                select 1 from shift_mahjong_project_step b 
  	                where a.detail_id = b.detail_id and b.shift_mahjong_step_id = #{shiftMahjongStepId,jdbcType=INTEGER}) 
  	         and a.is_deleted = 0
  </select>
  
  </mapper>
