<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.UserAccountMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.web.entity.UserAccount" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_pwd" property="userPwd" jdbcType="VARCHAR" />
    <result column="pwd_salt" property="pwdSalt" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="last_operator_id" property="lastOperatorId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="store_account" property="storeAccount" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
  </resultMap>
  
  

  
  
    <resultMap id="BaseResultMapByEmployee" type="com.zefun.web.dto.UserAccountDto" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_pwd" property="userPwd" jdbcType="VARCHAR" />
    <result column="pwd_salt" property="pwdSalt" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="last_operator_id" property="lastOperatorId" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="store_account" property="storeAccount" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="roleName" property="roleName" jdbcType="CHAR" />
    <result column="storeName" property="storeName" jdbcType="CHAR" />
    <result column="employeeName" property="employeeName" jdbcType="CHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    user_id, role_id, user_name, user_pwd, pwd_salt, create_time, update_time, last_operator_id, store_id, store_account, status
  </sql>
  
  <select id="selectUserNameByStoreIdAndRoleId" resultType="java.lang.String" parameterType="java.util.Map">
  	select user_name from user_account where store_id = #{storeId} and role_id = #{roleId}
  </select>
  
  <select id="selectUserCountByUserName" resultType="int" parameterType="java.lang.String">
  	select count(1) from user_account where user_name like concat(#{userName},'%') and status = 0;
  </select>

  <select id="selectByUserName" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from user_account
    where status = 0
    <if test="storeAccount!=null">
    and store_account = #{storeAccount}  
    </if>
    <if test="userName!=null">
    and user_name = #{userName} 
    </if>
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user_account
    where user_id = #{userId,jdbcType=INTEGER} and status = 0
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_account
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.zefun.web.entity.UserAccount"  useGeneratedKeys="true" keyProperty="userId">
    insert into user_account(user_id,role_id,user_name,user_pwd,pwd_salt,store_id, store_account) values (#{userId},#{roleId},#{userName},#{userPwd},#{pwdSalt},#{storeId},#{storeAccount})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.zefun.web.entity.UserAccount" >
    update user_account
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null" >
        user_pwd = #{userPwd,jdbcType=VARCHAR},
      </if>
      <if test="pwdSalt != null" >
        pwd_salt = #{pwdSalt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=CHAR},
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id = #{lastOperatorId,jdbcType=INTEGER},
      </if>
       <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
       <if test="storeId != null" >
        store_id = #{storeId,jdbcType=CHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <select id="countUserName" parameterType="com.zefun.web.entity.UserAccount" resultType="java.lang.Integer">
  select count(0) from user_account a where a.status=0 and a.user_name=#{userName}
  and a.store_id in (select b.store_id from store_info b where 
  exists(select 1 from store_info c where c.store_account = b.store_account and c.store_id = #{storeId})) 
  <if test="userId != '' and userId != null">
  and user_id=#{userId}
  </if>
  </select>

  <update id="updateUserRole" parameterType="com.zefun.web.entity.UserAccount">
  update user_account set role_id=#{roleId} where user_id=#{userId}
  </update>

  <select id="queryRoleId" parameterType="java.lang.Integer" resultType="com.zefun.web.entity.UserAccount">
    select role_id roleId from user_account where user_id=#{userId}
  </select>

  <insert id="insertlist" parameterType="com.zefun.web.dto.EmployeeDto">
  insert into user_account(user_id,store_id,role_id,user_name,user_pwd,pwd_salt)
  values (#{employeeId},#{storeId},#{roleId},#{phone},#{userPwd},#{pwdSalt})
  </insert>

  <select id="getSingleStoreAccount" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user_account
    where store_id = #{storeId,jdbcType=INTEGER}
  </select>
  
  <select id="selectSingleStoreAccount" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user_account
    where store_id = #{storeId,jdbcType=INTEGER} and role_id = 2
  </select>
    <select id="selectChainStoreAccount" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user_account
    where store_id = #{storeId,jdbcType=INTEGER} and role_id = 102
  </select>
    <select id="selectChainHQStoreAccount" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user_account
    where store_id = #{storeId,jdbcType=INTEGER} and role_id = 101
  </select>

    <select id="countByStoreId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    count(1)
    from user_account
    where store_id = #{storeId,jdbcType=INTEGER}
  </select>
  
  <select id="selectTouserByUserName" parameterType="java.lang.String" resultType="java.lang.String">
  	SELECT user_id from user_account LEFT JOIN employee_info ON employee_id = user_id AND is_deleted = 0 WHERE user_name = #{userName}
  </select>
  
   <select id="selectTouserByUserAccount" parameterType="com.zefun.web.entity.UserAccount" resultType="com.zefun.web.entity.UserAccount">
  	  	SELECT u.user_id AS userId  FROM user_account u WHERE u.store_account=#{storeAccount}   AND 
  	EXISTS (SELECT 1 FROM account_role_info c WHERE c.store_account = u.store_account AND u.role_id = c.account_role_id)
  </select>
  
  <update id="updateDisableAndStart" parameterType="com.zefun.web.entity.UserAccount" >
  update user_account set status=#{status} where   role_id = 1 and   store_account=#{storeAccount}
  </update> 
  
  
    <select id="selectByAccout" resultMap="BaseResultMapByEmployee" parameterType="java.util.Map" >
    select
	     u.user_id, u.role_id, u.user_name, u.user_pwd, u.pwd_salt, u.create_time, 
	     u.update_time, u.last_operator_id, u.store_id, u.store_account, u.status,
	     e.name as employeeName, a.account_role_name as roleName, s.store_name as storeName
    from user_account u
    	 left  join employee_info     e on u.user_id  = e.employee_id
    	 left  join store_info        s on u.store_id = s.store_id
    	 left  join account_role_info a on u.role_id  = a.account_role_id
    where u.status = 0
    <if test="storeAccount!=null">
    and u.store_account = #{storeAccount}  
    </if>
     <if test="codeName">
    and ( u.user_name = #{codeName}   or e.name= #{codeName} )
    </if>
     <if test="role">
    and u.role_id = #{role} 
    </if>
      <if test="userName">
    and u.user_name = #{userName} 
    </if>
    and e.is_deleted = 1
  </select>
  
  

  
    <select id="selectStoreAccountRole" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from user_account
    where role_id = #{accountRoleId} and store_account = #{storeAccount}  and status=0 
  </select>
  
</mapper>
