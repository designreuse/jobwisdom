<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.EmployeeRewardMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.web.entity.EmployeeReward" >
    <id column="reward_id" property="rewardId" jdbcType="INTEGER" />
    <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="is_reward" property="isReward" jdbcType="CHAR" />
    <result column="number" property="number" jdbcType="DOUBLE" />
    <result column="starttime" property="starttime" jdbcType="CHAR" />
    <result column="endtime" property="endtime" jdbcType="CHAR" />
    <result column="modifyer" property="modifyer" jdbcType="INTEGER" />
    <result column="modifytime" property="modifytime" jdbcType="CHAR" />
    <result column="reasons" property="reasons" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="DtoResultMap" type="com.zefun.web.dto.EmployeeRewardDto" >
    <id column="reward_id" property="rewardId" jdbcType="INTEGER" />
    <result column="employee_id" property="employeeId" jdbcType="INTEGER" />
    <result column="storeName" property="storeName" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="is_reward" property="isReward" jdbcType="CHAR" />
    <result column="number" property="number" jdbcType="DOUBLE" />
    <result column="modifyer" property="modifyer" jdbcType="INTEGER" />
    <result column="storeId" property="storeId" jdbcType="INTEGER" />
    <result column="modifytime" property="modifytime" jdbcType="CHAR" />
    <result column="reasons" property="reasons" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER"/>
    <result column="money" property="money" jdbcType="DOUBLE"/>
    <result column="employee_name" property="employeeName" jdbcType="VARCHAR" />
    <result column="employee_code" property="employeeCode" jdbcType="INTEGER"/>
  </resultMap>
  
  <sql id="Base_Column_List" >
    reward_id, employee_id, type, is_reward, number, starttime, endtime, modifyer, modifytime, 
    reasons
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from employee_reward
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from employee_reward
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zefun.web.entity.EmployeeReward" >
    insert into employee_reward (reward_id, employee_id, type, 
      is_reward, number, starttime, endtime, modifyer, modifytime, reasons)
    values (#{rewardId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{type,jdbcType=CHAR}, 
      #{isReward,jdbcType=CHAR}, #{number,jdbcType=DOUBLE}, #{starttime,jdbcType=CHAR}, 
      #{endtime,jdbcType=CHAR}, #{modifyer,jdbcType=INTEGER}, #{modifytime,jdbcType=CHAR}, 
      #{reasons,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zefun.web.entity.EmployeeReward" useGeneratedKeys="true" keyProperty="rewardId">
    insert into employee_reward
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rewardId != null" >
        reward_id,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="isReward != null" >
        is_reward,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="starttime != null" >
        starttime,
      </if>
      <if test="endtime != null" >
        endtime,
      </if>
      <if test="modifyer != null" >
        modifyer,
      </if>
      <if test="modifytime != null" >
        modifytime,
      </if>
      <if test="reasons != null" >
        reasons,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rewardId != null" >
        #{rewardId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="isReward != null" >
        #{isReward,jdbcType=CHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=DOUBLE},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=CHAR},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=CHAR},
      </if>
      <if test="modifyer != null" >
        #{modifyer,jdbcType=INTEGER},
      </if>
      <if test="modifytime != null" >
        #{modifytime,jdbcType=CHAR},
      </if>
      <if test="reasons != null" >
        #{reasons,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zefun.web.entity.EmployeeReward" >
    update employee_reward
    <set >
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="isReward != null" >
        is_reward = #{isReward,jdbcType=CHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=DOUBLE},
      </if>
      <if test="starttime != null" >
        starttime = #{starttime,jdbcType=CHAR},
      </if>
      <if test="endtime != null" >
        endtime = #{endtime,jdbcType=CHAR},
      </if>
      <if test="modifyer != null" >
        modifyer = #{modifyer,jdbcType=INTEGER},
      </if>
      <if test="modifytime != null" >
        modifytime = #{modifytime,jdbcType=CHAR},
      </if>
      <if test="reasons != null" >
        reasons = #{reasons,jdbcType=VARCHAR},
      </if>
    </set>
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zefun.web.entity.EmployeeReward" >
    update employee_reward
    set employee_id = #{employeeId,jdbcType=INTEGER},
      type = #{type,jdbcType=CHAR},
      is_reward = #{isReward,jdbcType=CHAR},
      number = #{number,jdbcType=DOUBLE},
      starttime = #{starttime,jdbcType=CHAR},
      endtime = #{endtime,jdbcType=CHAR},
      modifyer = #{modifyer,jdbcType=INTEGER},
      modifytime = #{modifytime,jdbcType=CHAR},
      reasons = #{reasons,jdbcType=VARCHAR}
    where reward_id = #{rewardId,jdbcType=INTEGER}
  </update>
  
  <!-- 根据员工标识列表删除员工惩罚记录，by 张小胖 -->
  <delete id="deleteByEmployeeIdList" parameterType="java.util.List">
  	delete from employee_reward where employee_id in 
  	<foreach collection="list" open="(" separator="," close=")" item="item">
	#{item} 
	</foreach>
  </delete>
  
  <!-- 根据员工id和类型分组查询奖惩记录汇总(全查询) -->
  <select id="selectAllCountReward" resultMap="DtoResultMap" parameterType="java.util.Map">
  	select
		count(1) AS count,
		sum(er.number) as money,
		ei.name as employee_name,
		ei.employee_code as employee_code,
		er.*
	from employee_reward er 
	left join employee_info ei on ei.employee_id = er.employee_id
	where
		ei.is_deleted = 0 
		and ei.store_id = ${storeId} 
		<if test="rewardType == 'BEHAVIOUR'">
			and er.type IN (6,7,8)
		</if>
		<if test="rewardType == 'ATTENDANCE'">
			and er.type IN (1,2,3,4,5)
		</if>
		<if test="rewardType == 'SERVICE'">
			and er.type IN (9,10,11)
		</if>
		<if test="time != null">
			and er.modifytime like "${time}%"
		</if>
		<if test="employeeName != null">
			and (ei.name like "%${employeeName}%" or ei.employee_code like "%${employeeName}%")
		</if>
	group by
		er.employee_id,
		er.type 
	order by er.employee_id
  </select>
  
  <!-- 根据员工id和类型分组查询奖惩记录汇总(分页查询) -->
  <select id="selectCountRewardByPage" resultMap="DtoResultMap" parameterType="com.zefun.web.entity.Page">
    SELECT
		ei.name AS employee_name,
		ei.employee_code AS employee_code,
		st.store_name  AS  storeName,
		ei.store_id as storeId,
		er.*
	from
		employee_reward er LEFT JOIN
		employee_info ei
	ON
		er.employee_id = ei.employee_id LEFT JOIN
		store_info st 
	ON  
	    st.store_id =  ei.store_id	
	WHERE	1=1
		<if test="params.storeId != null and params.storeId !=''">
			and ei.store_id = ${params.storeId}
		</if>
		<if test="params.time != null and params.time != ''">
			and er.modifytime = "${params.time}"
		</if>
		<if test="params.time1 != null and params.time1 != ''">
			and er.modifytime   &gt;= "${params.time1}"
		</if>
		<if test="params.time2 != null and params.time2 != ''">
			and er.modifytime   &lt;  "${params.time2}"
		</if>
		<if test="params.ruleName != null and params.ruleName != ''">
			and er.type  =  "${params.ruleName}"
		</if>
		<if test="params.ruleType != null and params.ruleType != 0">
			and er.is_reward   =  ${params.ruleType}
		</if>
		<if test="params.employee != null and params.employee != ''">
			and (ei.employee_code   =  "${params.employee}" or ei.name = "${params.employee}")
		</if>
  </select>
  
  
   <!-- 根据员工id和类型分组查询奖惩记录汇总(分页查询) -->
  <select id="selectCountRewardByGroupBy" resultMap="DtoResultMap" parameterType="java.util.Map">
  	SELECT
		ei.name AS employee_name,
		ei.employee_code AS employee_code,
		st.store_name  AS  storeName,
		ei.store_id as storeId,
		er.*
	from
		employee_reward er LEFT JOIN
		employee_info ei
	ON
		er.employee_id = ei.employee_id LEFT JOIN
		store_info st 
	ON  
	    st.store_id =  ei.store_id	
	WHERE	1=1
		<if test="storeId != null and storeId !=''">
			and ei.store_id = ${storeId}
		</if>
		<if test="time != null and time != '' ">
			and left(er.modifytime,7) = '${time}'
		</if>
		<if test="rewardId != null and rewardId != ''">
		 and	reward_id =${rewardId}
		</if>
		<if test="group != null and group != ''">
			GROUP BY  er.employee_id,storeName
		</if>
		order by  er.modifytime desc 
  </select>
  
  
  
  <!-- 分页查询奖惩详细 -->
  <select id="selectRewardByPage" resultMap="BaseResultMap" parameterType="com.zefun.web.entity.Page">
  	select * from employee_reward 
  	where employee_id = ${params.employeeId} and type = #{params.type} 
  	<if test="params.time != null">
  		and modifytime like "${params.time}%"
  	</if>
  </select>
  
  <!-- 根据员工id和奖惩类型和奖惩日期查询奖惩记录 -->
  <select id="selectRewardByEmployeeIdAndTypeAndDate" resultMap="BaseResultMap">
  	select 
    	<include refid="Base_Column_List" /> 
    from employee_reward 
    where employee_id = ${employeeId} and type = #{type} and modifytime like "${date}%" limit 1
  </select>
  
  <!-- 查询员工各类型汇总(根据员工id和日期) -->
  <select id="selectRewardCountGroupByType" resultType="java.util.Map">
  	select count(reward_id) as reward_count, type
	from employee_reward 
	where employee_id = ${employeeId} and modifytime like "${time}%"
	group by type
  </select>
  
</mapper>