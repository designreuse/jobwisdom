<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.MemberErrorDataMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.web.entity.MemberErrorData" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="INTEGER" />
    <result column="level_id" property="levelId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="birthday" property="birthday" jdbcType="CHAR" />
    <result column="phone" property="phone" jdbcType="CHAR" />
    <result column="pay_password" property="payPassword" jdbcType="CHAR" />
    <result column="password_salt" property="passwordSalt" jdbcType="VARCHAR" />
    <result column="total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="balance_amount" property="balanceAmount" jdbcType="DECIMAL" />
    <result column="total_integral" property="totalIntegral" jdbcType="INTEGER" />
    <result column="balance_integral" property="balanceIntegral" jdbcType="INTEGER" />
    <result column="total_giftmoney_amount" property="totalGiftmoneyAmount" jdbcType="DECIMAL" />
    <result column="balance_giftmoney_amount" property="balanceGiftmoneyAmount" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="update_time" property="updateTime" jdbcType="CHAR" />
    <result column="is_migrate" property="isMigrate" jdbcType="INTEGER" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    <result column="last_operator_id" property="lastOperatorId" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, store_id, level_id, name, sex, birthday, phone, pay_password, password_salt, 
    total_amount, balance_amount, total_integral, balance_integral, total_giftmoney_amount, 
    balance_giftmoney_amount, create_time, update_time, is_migrate, is_deleted, last_operator_id
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from member_error_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from member_error_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insertByMigrate" parameterType="com.zefun.web.dto.member.MemberMigrateDto">  
    insert into member_error_data (store_id, level_id, name, sex, birthday, phone, pay_password, password_salt, 
    total_amount, balance_amount, total_integral, balance_integral, total_giftmoney_amount, 
    balance_giftmoney_amount, create_time)   
    values  
    (#{storeId}, #{levelId}, #{name}, #{sex}, #{birthday}, #{phone}, #{payPassword},
                #{passwordSalt}, #{totalAmount}, #{balanceAmount}, #{totalIntegral}, #{balanceIntegral},
                #{totalGiftmoneyAmount}, #{balanceGiftmoneyAmount}, #{createTime})
  </insert>
  
  <insert id="insertBatch" parameterType="java.util.List">  
    insert into member_error_data (store_id, level_id, name, sex, birthday, phone, pay_password, password_salt, 
    total_amount, balance_amount, total_integral, balance_integral, total_giftmoney_amount, 
    balance_giftmoney_amount, create_time)   
    values  
    <foreach collection="list" item="item" index="index" separator="," >  
        (#{item.storeId}, #{item.levelId}, #{item.name}, #{item.sex}, #{item.birthday}, #{item.phone}, #{item.payPassword},
        #{item.passwordSalt}, #{item.totalAmount}, #{item.balanceAmount}, #{item.totalIntegral}, #{item.balanceIntegral},
        #{item.totalGiftmoneyAmount}, #{item.balanceGiftmoneyAmount}, #{item.createTime})  
    </foreach>  
  </insert>
  
  <insert id="insert" parameterType="com.zefun.web.entity.MemberErrorData" >
    insert into member_error_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="levelId != null" >
        level_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="payPassword != null" >
        pay_password,
      </if>
      <if test="passwordSalt != null" >
        password_salt,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="balanceAmount != null" >
        balance_amount,
      </if>
      <if test="totalIntegral != null" >
        total_integral,
      </if>
      <if test="balanceIntegral != null" >
        balance_integral,
      </if>
      <if test="totalGiftmoneyAmount != null" >
        total_giftmoney_amount,
      </if>
      <if test="balanceGiftmoneyAmount != null" >
        balance_giftmoney_amount,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="isMigrate != null" >
        is_migrate,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="levelId != null" >
        #{levelId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=CHAR},
      </if>
      <if test="payPassword != null" >
        #{payPassword,jdbcType=CHAR},
      </if>
      <if test="passwordSalt != null" >
        #{passwordSalt,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="balanceAmount != null" >
        #{balanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalIntegral != null" >
        #{totalIntegral,jdbcType=INTEGER},
      </if>
      <if test="balanceIntegral != null" >
        #{balanceIntegral,jdbcType=INTEGER},
      </if>
      <if test="totalGiftmoneyAmount != null" >
        #{totalGiftmoneyAmount,jdbcType=DECIMAL},
      </if>
      <if test="balanceGiftmoneyAmount != null" >
        #{balanceGiftmoneyAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=CHAR},
      </if>
      <if test="isMigrate != null" >
        #{isMigrate,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="lastOperatorId != null" >
        #{lastOperatorId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.zefun.web.entity.MemberErrorData" >
    update member_error_data
    <set >
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="levelId != null" >
        level_id = #{levelId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=CHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="payPassword != null" >
        pay_password = #{payPassword,jdbcType=CHAR},
      </if>
      <if test="passwordSalt != null" >
        password_salt = #{passwordSalt,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="balanceAmount != null" >
        balance_amount = #{balanceAmount,jdbcType=DECIMAL},
      </if>
      <if test="totalIntegral != null" >
        total_integral = #{totalIntegral,jdbcType=INTEGER},
      </if>
      <if test="balanceIntegral != null" >
        balance_integral = #{balanceIntegral,jdbcType=INTEGER},
      </if>
      <if test="totalGiftmoneyAmount != null" >
        total_giftmoney_amount = #{totalGiftmoneyAmount,jdbcType=DECIMAL},
      </if>
      <if test="balanceGiftmoneyAmount != null" >
        balance_giftmoney_amount = #{balanceGiftmoneyAmount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=CHAR},
      </if>
      <if test="isMigrate != null" >
        is_migrate = #{isMigrate,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
      <if test="lastOperatorId != null" >
        last_operator_id = #{lastOperatorId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>