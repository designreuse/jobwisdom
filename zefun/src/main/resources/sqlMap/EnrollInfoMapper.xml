<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zefun.web.mapper.EnrollInfoMapper" >
  <resultMap id="BaseResultMap" type="com.zefun.web.entity.EnrollInfo" >
    <id column="personnel_id" property="personnelId" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="store_name" property="storeName" jdbcType="VARCHAR" />
    <result column="store_type" property="storeType" jdbcType="INTEGER" />
    <result column="conference_id" property="conferenceId" jdbcType="INTEGER" />
    <result column="open_id" property="openId" jdbcType="VARCHAR" />
    <result column="is_pay" property="isPay" jdbcType="INTEGER" />
    <result column="referee_id" property="refereeId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="is_turn" property="isTurn" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    personnel_id, phone, name, store_name, store_type, conference_id, open_id, is_pay, 
    referee_id, create_time, is_turn
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from enroll_info
    where personnel_id = #{personnelId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from enroll_info
    where personnel_id = #{personnelId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zefun.web.entity.EnrollInfo" >
    insert into enroll_info (personnel_id, phone, name, 
      store_name, store_type, conference_id, 
      open_id, is_pay, referee_id, 
      create_time)
    values (#{personnelId,jdbcType=INTEGER}, #{phone,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, 
      #{storeName,jdbcType=VARCHAR}, #{storeType,jdbcType=INTEGER}, #{conferenceId,jdbcType=INTEGER}, 
      #{openId,jdbcType=VARCHAR}, #{isPay,jdbcType=INTEGER}, #{refereeId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zefun.web.entity.EnrollInfo" useGeneratedKeys="true" keyProperty="personnelId">
    insert into enroll_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="personnelId != null" >
        personnel_id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="storeName != null" >
        store_name,
      </if>
      <if test="storeType != null" >
        store_type,
      </if>
      <if test="conferenceId != null" >
        conference_id,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="isPay != null" >
        is_pay,
      </if>
      <if test="refereeId != null" >
        referee_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="isTurn != null" >
        is_turn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="personnelId != null" >
        #{personnelId,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="storeName != null" >
        #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="storeType != null" >
        #{storeType,jdbcType=INTEGER},
      </if>
      <if test="conferenceId != null" >
        #{conferenceId,jdbcType=INTEGER},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="isPay != null" >
        #{isPay,jdbcType=INTEGER},
      </if>
      <if test="refereeId != null" >
        #{refereeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="isTurn != null" >
        #{isTurn,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zefun.web.entity.EnrollInfo" >
    update enroll_info
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="storeName != null" >
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="storeType != null" >
        store_type = #{storeType,jdbcType=INTEGER},
      </if>
      <if test="conferenceId != null" >
        conference_id = #{conferenceId,jdbcType=INTEGER},
      </if>
      <if test="openId != null" >
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="isPay != null" >
        is_pay = #{isPay,jdbcType=INTEGER},
      </if>
      <if test="refereeId != null" >
        referee_id = #{refereeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="isTurn != null" >
        is_turn = #{isTurn,jdbcType=INTEGER},
      </if>
    </set>
    where personnel_id = #{personnelId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zefun.web.entity.EnrollInfo" >
    update enroll_info
    set phone = #{phone,jdbcType=CHAR},
      name = #{name,jdbcType=VARCHAR},
      store_name = #{storeName,jdbcType=VARCHAR},
      store_type = #{storeType,jdbcType=INTEGER},
      conference_id = #{conferenceId,jdbcType=INTEGER},
      open_id = #{openId,jdbcType=VARCHAR},
      is_pay = #{isPay,jdbcType=INTEGER},
      referee_id = #{refereeId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=CHAR}
    where personnel_id = #{personnelId,jdbcType=INTEGER}
  </update>
  
  <select id="selectByOpenId" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from enroll_info
    where open_id = #{openId} and conference_id = #{conferenceId}
  </select>
  
  <select id="selectMainAware" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from enroll_info
    where referee_id = #{personnelId} and conference_id = #{conferenceId}
  </select>
  
  <select id="selectBranchAware" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from enroll_info
    where conference_id = #{conferenceId}
    and referee_id in 
    <foreach item="item" collection="mainAware" separator="," open="(" close=")" index="">  
      #{item.personnelId, jdbcType=INTEGER}
    </foreach>  
  </select>
  <select id="selectHasPay" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from enroll_info
    where conference_id = #{conferenceId} and is_pay = 1
  </select>
  <select id="selectNoPay" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from enroll_info
    where conference_id = #{conferenceId} and is_pay = 0
  </select>
  <select id="selectConferenceDetails" parameterType="java.lang.Integer" resultType="com.zefun.web.dto.DetailsDto">
   SELECT 
	ei.personnel_id AS id,ei.name AS NAME,c.conference_name AS conferenceName,
	(SELECT COUNT(1) from enroll_info WHERE referee_id = ei.personnel_id AND is_pay = 1) AS mainCount,
	(SELECT COUNT(1) from enroll_info WHERE referee_id IN (SELECT personnel_id from enroll_info WHERE referee_id = ei.personnel_id AND is_pay = 1) AND is_pay = 1) AS branchCount,
	(SELECT COUNT(1) from enroll_info WHERE referee_id = ei.personnel_id AND is_pay = 1)*c.main_award AS mainAmount,
	(SELECT COUNT(1) from enroll_info WHERE referee_id IN (SELECT personnel_id from enroll_info WHERE referee_id = ei.personnel_id AND is_pay = 1) AND is_pay = 1)*c.branch_award AS branchAmount
  from enroll_info ei
  LEFT JOIN conference_info c ON c.conference_id = ei.conference_id
  WHERE ei.conference_id = #{conferenceId}
  </select>
  <select id="selectConferenceEarning" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  SELECT COUNT(1)*c.registration_amount from enroll_info ei LEFT JOIN conference_info c ON c.conference_id = ei.conference_id  WHERE ei.is_pay = 1 AND  ei.conference_id = #{conferenceId}
  </select>
  
  <select id="selectHasAdmission" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from enroll_info
    where conference_id = #{conferenceId} and is_turn = 1 and is_pay = 1
  </select>
  <select id="selectNoAdmission" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select 
    <include refid="Base_Column_List" />
    from enroll_info
    where conference_id = #{conferenceId} and is_turn = 0 and is_pay = 1
  </select>
</mapper>