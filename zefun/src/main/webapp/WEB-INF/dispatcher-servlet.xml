<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/mvc
      http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd"
  default-lazy-init="true">


  <!-- 添加注解驱动 -->
  <context:annotation-config />
  
  <mvc:annotation-driven>
  	<!-- 检测访问连接的设备,{移动,pc,平板} -->
  	<mvc:argument-resolvers>
  		<bean class="org.springframework.mobile.device.DeviceHandlerMethodArgumentResolver"/>  
    </mvc:argument-resolvers>
    <!-- driven注入的message-converters优先级高于RequestMappingHandlerAdapter注入的转换器。 -->
    <mvc:message-converters>
    	<bean class="com.zefun.common.utils.UTF8StringHttpMessageConverter"></bean>
    </mvc:message-converters>
  </mvc:annotation-driven>
  
<!--   <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" p:useCacheControlNoStore="true" p:cacheSeconds="0">
    <property name="messageConverters">
      <list>
        <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />
      </list>
    </property>
  </bean> -->

  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter" >
    <property name="messageConverters">
      <list>
        <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
        <bean class="com.zefun.common.utils.UTF8StringHttpMessageConverter" />
        <bean class="org.springframework.http.converter.FormHttpMessageConverter" />
        <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
        <!-- <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" />  AnnotationMethodHandlerAdapter 使用的是这个,spring3.1后提升了版本-->
        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>         
      </list>
    </property>
  </bean>
  

  <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <property name="maxUploadSize" value="50000000000000" />
    <property name="maxInMemorySize" value="4096" />
    <property name="defaultEncoding" value="GBK" />
  </bean>

  
  <!-- 此处为自容器，扫描所有的controller 但是不扫描service，否则事物管理会失效 -->
  <context:component-scan base-package="com.zefun.web,com.zefun.wechat,com.zefun.app">  
  	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />  
  </context:component-scan> 
  <mvc:default-servlet-handler />
  
  <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
    <property name="viewClass"
      value="org.springframework.web.servlet.view.JstlView"></property>
    <!-- 配置jsp路径前缀 -->
    <property name="prefix" value="/WEB-INF/view/"></property>
    <!-- 配置URl后缀 -->
    <property name="suffix" value=".jsp"></property>
  </bean>

  <!-- 配置session超时拦截器 -->
  <mvc:interceptors>
    <mvc:interceptor>
      <mvc:mapping path="/**" />
      <bean class="com.zefun.web.interceptor.SessionInterceptor">
        <property name="allowUrlPatterns">
          <list>
            <value>/user/*.*</value>
          </list>
        </property>
      </bean>
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/**" />
      <bean class="com.zefun.web.interceptor.AuthorityInterceptor" init-method="initAllowPatterns"></bean>
    </mvc:interceptor>
    <mvc:interceptor>
      <mvc:mapping path="/**" />
      	<bean class="org.springframework.mobile.device.DeviceResolverHandlerInterceptor"></bean>
    </mvc:interceptor>
  </mvc:interceptors>
  
</beans>
